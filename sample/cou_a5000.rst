######################
Basic Programming in C
######################


===========
Hello World
===========


******************
Hello World With C
******************


-------------------------------------
con_a0400:C Programming - Hello World
-------------------------------------


'''''''''''
Description
'''''''''''








********************************************
Basics of Variables, Functions and Operators
********************************************


--------------------------------------
con_a0401:C Programming - Data Types 1
--------------------------------------


'''''''''''
Description
'''''''''''








---------------------------------------------------------------------------
asg_a0006 : Number - Calculate the amount after adding the simple interest.
---------------------------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``get_amount()`` which will take principle, rate of interest, and time in years and return the amount.


'''''
Notes
'''''


^^^^^^
Note 1
^^^^^^

This is a general note.


'''''''
Samples
'''''''
========  ======================================================  ==============  ========
  Number  Explanation                                             Input             Output
========  ======================================================  ==============  ========
       1  See if the function works correctly for simple inputs.  [10000, 5, 2]   1000
       2  See if it works for 0% interest                         [1000, 0, 2]       0
       3  See if it works for 6Months                             [1000, 5, 0.5]    25
       4  See if it works for decimal values                      [1200.5, 5, 1]    60.025
========  ======================================================  ==============  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``double get_amount (double principle, double rate, double years)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  =========  ===========================================  =========
  Number  Type    Name       Explanation                                  Remarks
========  ======  =========  ===========================================  =========
       1  double  principle  Principle amount to be used for calculation
       2  double  rate       Rate percentage to be used for calculation
       3  double  years      Number of years to be used for calculation
========  ======  =========  ===========================================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  ===============================  =========
  Number  Type    Name    Explanation                      Remarks
========  ======  ======  ===============================  =========
       1  double  NA      double/double calculated amount
========  ======  ======  ===============================  =========


-----------------------------------------------
asg_a0010 : Number - Reverse a 5 digit integer.
-----------------------------------------------


'''''''''''
Description
'''''''''''


Write a function ``reverse_5_digit_int()`` which takes an integer and returns the reverse of it.

For the numbers ending with zero you should return till the place you find digits other than
zero.



'''''''
Samples
'''''''
========  ===================================================================  =======  ========
  Number  Explanation                                                            Input    Output
========  ===================================================================  =======  ========
       1  Check if function is properly working for a random integer.              123       321
       2  Check if function is properly working for negative input                -123      -321
       3  Check if function is properly working for longer number                 4123      3214
       4  Check if function is properly working for all zeroes                       0         0
       5  Check if function is properly working for trailing zeroes                100         1
       6  Check if function is properly working for zeroes in between digits.     1001      1001
       7  Check if function is properly working for trailing zeroes            1001000      1001
========  ===================================================================  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case(char *input, char *retval)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ========  ======  ===============================  =========
  Number  Type      Name    Explanation                      Remarks
========  ========  ======  ===============================  =========
       1  C String  input   String to be worked upn
       2  C String  retval  String with the case converted.
========  ========  ======  ===============================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


-----------------------------------------------------------
asg_a0011 : Number - Sum of the digits of a 5 digit number.
-----------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``sum_of_5_digits()`` which takes an integer and returns the sum of the numbers.


'''''''
Samples
'''''''
========  ==============================================  =======  ========
  Number  Explanation                                       Input    Output
========  ==============================================  =======  ========
       1  Check if function is proper for 3 digits.           123         6
       2  Check if function is proper                        1423        10
       3  Check if function is proper for negative input      -23         5
       4  Check if function is proper for zeros                 0         0
========  ==============================================  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``int sum_of_digits(int number)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ====================================  =========
  Number  Type    Name    Explanation                           Remarks
========  ======  ======  ====================================  =========
       1  int     number  Number whose digits are to be added.
========  ======  ======  ====================================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  ======================  =========
  Number  Type    Name    Explanation             Remarks
========  ======  ======  ======================  =========
       1  int     NA      Sum of all the digits.
========  ======  ======  ======================  =========


-----------------------------------------------------------
asg_a0012 : Number - Product of digits of a 5 digit number.
-----------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``product_of_5_digits()`` which returns the products of the digits passed to the function.


'''''''
Samples
'''''''
========  ===============================================  =======  ========
  Number  Explanation                                        Input    Output
========  ===============================================  =======  ========
       1  Check if function is proper                          123         6
       2  Check if function is proper for negative input      -123         6
       3  Check if function is proper for input with zero     1203         0
========  ===============================================  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``int product_of_digits(int number)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ====================================  =========
  Number  Type    Name    Explanation                           Remarks
========  ======  ======  ====================================  =========
       1  int     number  Number whose digits are to be added.
========  ======  ======  ====================================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  ======================  =========
  Number  Type    Name    Explanation             Remarks
========  ======  ======  ======================  =========
       1  int     NA      Sum of all the digits.
========  ======  ======  ======================  =========


-------------------------------------
asg_a0017 : Number - Find the profit.
-------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``profit()`` which when passed the cost price and the profit percentage, returns the profit.


'''''''
Samples
'''''''
========  ==============================================  ==============  ========
  Number  Explanation                                     Input             Output
========  ==============================================  ==============  ========
       1  Check if function is proper                     [1000.0, 20.0]       200
       2  Check if function is proper for negative input  [-100.0, 20.0]       -20
       3  Check if function is proper for 0%              [1000.0, 0.0]          0
========  ==============================================  ==============  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void profit(char *input, char *retval)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ========  ======  ===============================  =========
  Number  Type      Name    Explanation                      Remarks
========  ========  ======  ===============================  =========
       1  C String  input   String to be worked upn
       2  C String  retval  String with the case converted.
========  ========  ======  ===============================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


--------------------------------------------------------
asg_a0019 : Number - Find the circumference of a circle.
--------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``circumference()`` which when passed the radius returns the circumference.


'''''''
Samples
'''''''
========  ==============================================  =======  ========
  Number  Explanation                                       Input    Output
========  ==============================================  =======  ========
       1  Check if function is proper                        20      125.6
       2  Check if function is proper                        20.3    127.48
       3  Check if function is proper for negative input    -20        0
========  ==============================================  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void circumference(char *input, char *retval)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ========  ======  ===============================  =========
  Number  Type      Name    Explanation                      Remarks
========  ========  ======  ===============================  =========
       1  C String  input   String to be worked upn
       2  C String  retval  String with the case converted.
========  ========  ======  ===============================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


-------------------------------------------
asg_a0031 : Number - Find the gross salary.
-------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``calculate_gross_salary()`` which when passed the Basic salary, Dearness Allowance in percentage of Basic and House Rent Allowance in rupees, calculates and returns the gross salary, which is the sum of all three.


'''''''
Samples
'''''''
========  ==============================================  ==================  ========
  Number  Explanation                                     Input                 Output
========  ==============================================  ==================  ========
       1  Check if function is proper                     [20000, 10, 5000]      27000
       2  Check if function is proper for negative input  [-20000, 10, 5000]         0
========  ==============================================  ==================  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case(char *input, char *retval)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ========  ======  ===============================  =========
  Number  Type      Name    Explanation                      Remarks
========  ========  ======  ===============================  =========
       1  C String  input   String to be worked upn
       2  C String  retval  String with the case converted.
========  ========  ======  ===============================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


-------------------------------------------
asg_a0032 : Number - Convert Kms to Meters.
-------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``convert_kms_to_mts()`` which takes as input KMs and returns the converted value in Meters.


'''''''
Samples
'''''''
========  ==============================  =======  ========
  Number  Explanation                     Input      Output
========  ==============================  =======  ========
       1  Check for basic functionality.  [1000]    1000000
       2  Check for negative numbers.     [-1000]  -1000000
       3  Check for 0.                    0               0
========  ==============================  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``int convert_kms_to_mts (int kms)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ==============================  =========
  Number  Type    Name    Explanation                     Remarks
========  ======  ======  ==============================  =========
       1  int     kms     KMs to be converted to meters.
========  ======  ======  ==============================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =========================  =========
  Number  Type    Name    Explanation                Remarks
========  ======  ======  =========================  =========
       1  int     NA      Return the KMs in meters.
========  ======  ======  =========================  =========


----------------------------------------
asg_a0033 : Number - Convert kms to feet
----------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``convert_kms_to_feet()`` which when passed values in KMs returns the Feet.


'''''''
Samples
'''''''
========  =============================  =======  =========
  Number  Explanation                    Input       Output
========  =============================  =======  =========
       1  Check for basic case.          [1]        3280.84
       2  Check for another basic case.  [100]    328084
       3  Check for zero value.          [0]           0
       4  Check for negative number.     [-1]      -3280.84
========  =============================  =======  =========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``float convert_kms_to_feet(int kms)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  =======  ======  =====================================  =========
  Number  Type     Name    Explanation                            Remarks
========  =======  ======  =====================================  =========
       1  integer  kms     Kilometers to be converted into feet.
========  =======  ======  =====================================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  ================================  =========
  Number  Type    Name    Explanation                       Remarks
========  ======  ======  ================================  =========
       1  float   NA      Number of feet in the Kilometer.
========  ======  ======  ================================  =========


------------------------------------------------
asg_a0034 : Number - Convert KMs to MilliMeters.
------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``convert_kms_to_mms()`` which when passed value in KMs returns values in MilliMetres.


'''''''
Samples
'''''''
========  =============================  =======  ========
  Number  Explanation                    Input      Output
========  =============================  =======  ========
       1  Check for basic functionality  [1]       1000000
       2  Check for negative values      [-1]     -1000000
       3  Check for zero                 0               0
========  =============================  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``int convert_kms_to_mms(int kms)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ==============================  =========
  Number  Type    Name    Explanation                     Remarks
========  ======  ======  ==============================  =========
       1  int     kms     KMs to convert to MilliMeters.
========  ======  ======  ==============================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  ======================  =========
  Number  Type    Name    Explanation             Remarks
========  ======  ======  ======================  =========
       1  int     NA      Return in milli meters
========  ======  ======  ======================  =========


--------------------------------------------------
asg_a0036 : Number - Convert farenheit to celsius.
--------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``convert_fahrenheit_to_celsius()`` which when passed value in Fahrenheit returns the converted value in Celsius.


'''''
Notes
'''''


^^^^^^
Note 1
^^^^^^

Take care of integer to float conversion.


'''''''
Samples
'''''''
========  ===========================  =======  ========
  Number  Explanation                  Input      Output
========  ===========================  =======  ========
       1  Check if function is proper  [68]        20
       2  Check if function is proper  [-68]      -55.56
       3  Check if function is proper  [0]        -17.78
       4  Check if function is proper  [32]         0
========  ===========================  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``float convert_fahrenheit_to_celsius(int *input, int )``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ========  =================================================  =========
  Number  Type    Name      Explanation                                        Remarks
========  ======  ========  =================================================  =========
       1  int     fht_temp  Fahrenheit temprature to be converted to Celsius.
========  ======  ========  =================================================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  =============  ======  ======================  =========
  Number  Type           Name    Explanation             Remarks
========  =============  ======  ======================  =========
       1  string object  NA      Temprature in Celsius.
========  =============  ======  ======================  =========


------------------------------------------------------------
asg_a0040 : Number - Average of digits for a 5 digit number.
------------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function to ``find_five_digit_sum()`` which when passed a 
5 digit number returns the sum of the digits.



'''''''
Samples
'''''''
========  ========================================  ========  ========
  Number  Explanation                               Input       Output
========  ========================================  ========  ========
       1  Check if function is proper               [53161]         16
       2  Check if function is proper for negative  [-53161]        16
       3  Check if function is proper               [0]              0
========  ========================================  ========  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case(char *input, char *retval)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ========  ======  ===============================  =========
  Number  Type      Name    Explanation                      Remarks
========  ========  ======  ===============================  =========
       1  C String  input   String to be worked upn
       2  C String  retval  String with the case converted.
========  ========  ======  ===============================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


------------------------------------------------------------
asg_a0041 : Loop - Left Rotate a 5 digit number by n places.
------------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``rotate_numbers()`` which when passed a number rotates left the number by n places.


'''''
Notes
'''''


^^^^^^
Note 1
^^^^^^

null


'''''''
Samples
'''''''
========  ========================================  ===========  =========
  Number  Explanation                               Input           Output
========  ========================================  ===========  =========
       1  Check if function is proper               [12345]          23451
       2  Check if function is proper for negative  [-12345]        -23451
       3  Check if function is proper               [23145]          31452
       4  Check if function is proper               [234567891]  345678912
========  ========================================  ===========  =========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case(char *input, char *retval)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ========  ======  ===============================  =========
  Number  Type      Name    Explanation                      Remarks
========  ========  ======  ===============================  =========
       1  C String  input   String to be worked upn
       2  C String  retval  String with the case converted.
========  ========  ======  ===============================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


-------------------------------------------------------------
asg_a0042 : Number - Rotate by n places for a 5 digit number.
-------------------------------------------------------------


'''''''''''
Description
'''''''''''


Write a function ``rotate_n()`` which takes input a number and number of
places the number should be rotated and then rotates the numbers by that
many places.



'''''''
Samples
'''''''
========  ===========================  ===========  ========
  Number  Explanation                  Input          Output
========  ===========================  ===========  ========
       1  Check if function is proper  [12345, 3]      45123
       2  Check if function is proper  [12345, 5]      12345
       3  Check if function is proper  [-12345, 3]    -45123
========  ===========================  ===========  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case(char *input, char *retval)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ========  ======  ===============================  =========
  Number  Type      Name    Explanation                      Remarks
========  ========  ======  ===============================  =========
       1  C String  input   String to be worked upn
       2  C String  retval  String with the case converted.
========  ========  ======  ===============================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


-------------------------------------------------
asg_a0045 : Decision - Find the volume of a cube.
-------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``volume_cube()`` which when passed the side of a cube, returns the volume of the cube.


'''''''
Samples
'''''''
========  =====================================================  =======  ========
  Number  Explanation                                              Input    Output
========  =====================================================  =======  ========
       1  Check for basic values.                                      5       125
       2  Check if the function returns -1 for negative values.       -5        -1
========  =====================================================  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``int cube_volume(int side)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  =======  ======  =====================================================  =========
  Number  Type     Name    Explanation                                            Remarks
========  =======  ======  =====================================================  =========
       1  Integer  side    Integer based on which the volume will be calculated.
========  =======  ======  =====================================================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  ===================  =========
  Number  Type    Name    Explanation          Remarks
========  ======  ======  ===================  =========
       1  int     NA      Volume of the cube.
========  ======  ======  ===================  =========


-------------------------------------------------
asg_a0938 : Decision - Make number from 5 digits.
-------------------------------------------------


'''''''''''
Description
'''''''''''


Write a function ``make_number()`` which will be passed 5 integers. The
function needs to make a number out of them. For example the numbers passed
will be 1, 2, 3, 4, 5 and the output will be 12345.



'''''''
Samples
'''''''
========  =============  =======  ========
  Number  Explanation    Input    Output
========  =============  =======  ========
       1                          #
========  =============  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


----------------------------------------------------------
asg_a0944 : Decision - Count for the number of Odd Digits.
----------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``count_odd_digits()``. Return the number of digits which are odd.


'''''''
Samples
'''''''
========  =============  =======  ========
  Number  Explanation    Input    Output
========  =============  =======  ========
       1                          #
========  =============  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


---------------------------------
asg_a2300 : Number - Add 5 and 6.
---------------------------------


'''''''''''
Description
'''''''''''

Write a function ``add_5_6()`` to add 5 and 6 and return the output.


'''''''
Samples
'''''''
========  =============  =======  ========
  Number  Explanation    Input    Output
========  =============  =======  ========
       1                          #
========  =============  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


-------------------------------------
asg_a2301 : Number - Add two numbers.
-------------------------------------


'''''''''''
Description
'''''''''''

Write a program which takes two numbers as input from the user and prints the sum to the screen.


'''''''
Samples
'''''''
========  =============  =======  ========
  Number  Explanation    Input    Output
========  =============  =======  ========
       1                          #
========  =============  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


---------------------------------------------------
asg_a2303 : Number - Find the product of 200 and 3.
---------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``find_product_200_and_3()`` to find the product of 200 and 3


'''''''
Samples
'''''''
========  =============  =======  ========
  Number  Explanation    Input    Output
========  =============  =======  ========
       1                          #
========  =============  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


***************
Decision Making
***************


--------------------------------------
con_a0402:C Programming - if then else
--------------------------------------


'''''''''''
Description
'''''''''''








-------------------------------------------------------------------
asg_a0044 : Decision - Check palindrome of a  5 digit number number
-------------------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``is_palindrome_number()`` which when passed a number
checks if the number is palindrome or not and returns True or False.



'''''''
Samples
'''''''
========  ========================================  ========  ========
  Number  Explanation                               Input     Output
========  ========================================  ========  ========
       1  Check if function is proper               [12321]   true
       2  Check if function is proper for negative  [-12321]  true
       3  Check if function is proper               [64]      true
========  ========================================  ========  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case(char *input, char *retval)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ========  ======  ===============================  =========
  Number  Type      Name    Explanation                      Remarks
========  ========  ======  ===============================  =========
       1  C String  input   String to be worked upn
       2  C String  retval  String with the case converted.
========  ========  ======  ===============================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


----------------------------------------------
asg_a0048 : Decision - Cuboid longest diagonal
----------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``calculate_longest_diagonal()`` which when passed the length, breadth and height of the cube returns the length of the longest diagonal of the cuboid.


'''''
Notes
'''''


^^^^^^
Note 1
^^^^^^

This is sample note.


'''''''
Samples
'''''''
========  ===========================  ==========  ========
  Number  Explanation                  Input         Output
========  ===========================  ==========  ========
       1  Check if function is proper  [10, 4, 5]     11.87
========  ===========================  ==========  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``int calculate_longest_diagonal(int side1, int side2, int side3)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ==========================  =========
  Number  Type    Name    Explanation                 Remarks
========  ======  ======  ==========================  =========
       1  int     side1   First side of the cuboid.
       2  int     side2   Second side of the cuboid.
       3  int     side3   Third side of the cuboid.
========  ======  ======  ==========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =============================================  =========
  Number  Type    Name    Explanation                                    Remarks
========  ======  ======  =============================================  =========
       1  int     NA      Length of the longest diagonal of the cuboid.
========  ======  ======  =============================================  =========


---------------------------------------------------------
asg_a0122 : Decision - Find if profit was made in a sale.
---------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``is_profit()`` which when passed the SP and CP, returns if there was a profit made in the sale.


'''''''
Samples
'''''''
========  ===========================  ==========  ========
  Number  Explanation                  Input         Output
========  ===========================  ==========  ========
       1  Check if function is proper  [200, 100]         1
========  ===========================  ==========  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``int is_profit(float selling_price, float cost_price)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  =============  ======  =============================  =========
  Number  Type           Name    Explanation                    Remarks
========  =============  ======  =============================  =========
       1  selling_price  float   Selling price of the article.
       3  cost_price     float   Cost price of the article.
========  =============  ======  =============================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =============================================================================================================================  =========
  Number  Type    Name    Explanation                                                                                                                    Remarks
========  ======  ======  =============================================================================================================================  =========
       1  int     NA      Return value based on the result obtained. If there is a profit return >0, for no profit no loss return 0, for loss return -1
========  ======  ======  =============================================================================================================================  =========


------------------------------------------------
asg_a0123 : Decision - Find maximum of 3 values.
------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``my_maximum()`` which when passed three numbers returns the value which is the maximum.


'''''''
Samples
'''''''
========  ===========================  ===========  ========
  Number  Explanation                  Input          Output
========  ===========================  ===========  ========
       1  Check if function is proper  [10, 5, 20]        20
========  ===========================  ===========  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``int my_maximum(int num1, int num2, int num3)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ==================  =========
  Number  Type    Name    Explanation         Remarks
========  ======  ======  ==================  =========
       1  int     num1    The first number.
       2  int     num2    The second number.
       3  int     num3    The third number.
========  ======  ======  ==================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  ============================  =========
  Number  Type    Name    Explanation                   Remarks
========  ======  ======  ============================  =========
       1  int     NA      The number which is maximum.
========  ======  ======  ============================  =========


---------------------------------------------------
asg_a0124 : Decision - Find minimum among 5 values.
---------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``my_minimum()`` which when passed three numbers returns the one which is the minimum.


'''''''
Samples
'''''''
========  ===========================  ============  ========
  Number  Explanation                  Input           Output
========  ===========================  ============  ========
       1  Check if function is proper  [10, 5, 20]          5
       2  Check if function is proper  [10, -5, 20]        -5
       3  Check if function is proper  [0, 0, 0]            0
========  ===========================  ============  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``int my_minimum(int num1, int num2, int num3)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ==================  =========
  Number  Type    Name    Explanation         Remarks
========  ======  ======  ==================  =========
       1  int     num1    The first number.
       2  int     num2    The second number.
       3  int     num3    The third number.
========  ======  ======  ==================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  ============================  =========
  Number  Type    Name    Explanation                   Remarks
========  ======  ======  ============================  =========
       1  int     NA      The number which is minimum.
========  ======  ======  ============================  =========


---------------------------------
asg_a0126 : Decision - is_prime()
---------------------------------


'''''''''''
Description
'''''''''''

Write a function ``is_prime(number)`` which finds if a number is prime or not.


'''''''
Samples
'''''''
========  ===========================  =======  ========
  Number  Explanation                  Input    Output
========  ===========================  =======  ========
       1  Check if function is proper  [3]      True
       2  Check if function is proper  [10]     False
       3  Check if function is proper  [-3]     False
       4  Check if function is proper  [0]      False
========  ===========================  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``int is_prime(int number)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ===============================  =========
  Number  Type    Name    Explanation                      Remarks
========  ======  ======  ===============================  =========
       1  int     number  Number to be checked for prime.
========  ======  ======  ===============================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  ===========================================================================================  =========
  Number  Type    Name    Explanation                                                                                  Remarks
========  ======  ======  ===========================================================================================  =========
       1  int     NA      Return value based on if a number is prime or no. 1 if passed number is prime, 0 otherwise.
========  ======  ======  ===========================================================================================  =========


-------------------------------------
asg_a0128 : Decision - Check for zero
-------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``is_zero()`` which checks if the number is zero or not.


'''''''
Samples
'''''''
========  ===========================  =======  ========
  Number  Explanation                  Input    Output
========  ===========================  =======  ========
       1  Check if function is proper  [0]      True
       2  Check if function is proper  [10]     False
       3  Check if function is proper  [0]      True
========  ===========================  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``int is_zero(int number)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  =========================  =========
  Number  Type    Name    Explanation                Remarks
========  ======  ======  =========================  =========
       1  int     number  Number to be worked upon.
========  ======  ======  =========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  int     NA      1/0 based on the result.
========  ======  ======  ========================  =========


------------------------------------------------
asg_a0129 : Decision - Find maximum in 4 numbers
------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``find_maximum_in_4()`` which finds the maximum out of the 4 numbers passed to it.


'''''''
Samples
'''''''
========  ===========================  ===================  ========
  Number  Explanation                  Input                  Output
========  ===========================  ===================  ========
       1  Check if function is proper  [20, 10, 5, 21]            21
       2  Check if function is proper  [20, 10, 5, -21]           20
       3  Check if function is proper  [-20, -10, -5, -21]        -5
========  ===========================  ===================  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``integer find_maximum_in_4 (int num1, int num2, int num3, int num4)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  =============  =========
  Number  Type    Name    Explanation    Remarks
========  ======  ======  =============  =========
       1  int     num1    First number
       2  int     num2    Second number
       3  int     num3    Third  number
       4  int     num4    Fourth number
========  ======  ======  =============  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  =======  ======  =======================================  =========
  Number  Type     Name    Explanation                              Remarks
========  =======  ======  =======================================  =========
       1  integer  NA      The maximum of the four numbers passed.
========  =======  ======  =======================================  =========


-------------------------------------
asg_a0130 : Decision - Find the grade
-------------------------------------


'''''''''''
Description
'''''''''''


Write a function ``find_grade()`` which will take marks as input and return a number based on the grade obtained.
Grade can be calculated as follows

Grade 1     - above 80 
Grade 2     - above 60 less than equal to 80
Grade 3     - above 40 less than equal to 60
Grade 4     - above 20 less than equal to 40
Grade 5     - above 00 less than equal to 20

If the marks is more than 100 or is invalid, return -1.



'''''''
Samples
'''''''
========  ===========================  =======  ========
  Number  Explanation                  Input      Output
========  ===========================  =======  ========
       1  Check if function is proper  [60]            3
========  ===========================  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``int find_grade(int marks)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  =======  ======  ===============================================  =========
  Number  Type     Name    Explanation                                      Remarks
========  =======  ======  ===============================================  =========
       1  integer  marks   The marks of which the grade needs to be found.
========  =======  ======  ===============================================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  =======  ======  =============================================================  =========
  Number  Type     Name    Explanation                                                    Remarks
========  =======  ======  =============================================================  =========
       1  integer  NA      The Grade to be returned based on the calculations mentioned.
========  =======  ======  =============================================================  =========


---------------------------------------------------------------------------------------
asg_a0853 : Decision - Write a function to check if a given year is a leap year or not?
---------------------------------------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``is_leap_year(int year)`` to check if the valid year passed to the function is a leap year or not. Leap year is a year which has 366 days instead of 365 days in a year. The function should return True if the year is a leap year, else it should return False. In case of invalid input, it should return False.


'''''''
Samples
'''''''
========  ===============================  =======  ========
  Number  Explanation                      Input    Output
========  ===============================  =======  ========
       1  Check if the function is proper  [2016]   True
       2  Check if the function is proper  [-2016]  False
       3  Check if the function is proper  [2017]   False
========  ===============================  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case(char *input, char *retval)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ========  ======  ===============================  =========
  Number  Type      Name    Explanation                      Remarks
========  ========  ======  ===============================  =========
       1  C String  input   String to be worked upn
       2  C String  retval  String with the case converted.
========  ========  ======  ===============================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


-------------------------------------------------------
asg_a0908 : Decision - Check if number is multiple of 3
-------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``is_multiple()`` to check whether a given unsigned number is a multiple of 3, without using division and modulo operators.


'''''''
Samples
'''''''
========  =============  =======  ========
Number    Explanation    Input    Output
========  =============  =======  ========
========  =============  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case(char *input, char *retval)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ========  ======  ===============================  =========
  Number  Type      Name    Explanation                      Remarks
========  ========  ======  ===============================  =========
       1  C String  input   String to be worked upn
       2  C String  retval  String with the case converted.
========  ========  ======  ===============================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


----------------------------------------------------------
asg_a0909 : Decision - Check if a number is divisible by 6
----------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function


'''''''
Samples
'''''''
========  =============  =======  ========
Number    Explanation    Input    Output
========  =============  =======  ========
========  =============  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case(char *input, char *retval)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ========  ======  ===============================  =========
  Number  Type      Name    Explanation                      Remarks
========  ========  ======  ===============================  =========
       1  C String  input   String to be worked upn
       2  C String  retval  String with the case converted.
========  ========  ======  ===============================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


------------------------------------------------
asg_a0940 : Decision - Check if a number is odd.
------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``check_if_odd()`` to check if a number is odd or no.


'''''''
Samples
'''''''
========  =============  =======  ========
  Number  Explanation    Input    Output
========  =============  =======  ========
       1                          #
========  =============  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


------------------------------------------------
asg_a0941 : Decision - Check if a number is even
------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``is_even()`` to check if a number is even or no.


'''''''
Samples
'''''''
========  =============  =======  ========
  Number  Explanation    Input    Output
========  =============  =======  ========
       1                          #
========  =============  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


----------------------------------------------
asg_a0942 : Decision - Check if divisible by 3
----------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``divisible_by_3()`` to check if a number is divisible by 3.


'''''''
Samples
'''''''
========  =============  =======  ========
  Number  Explanation    Input    Output
========  =============  =======  ========
       1                          #
========  =============  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


-------------------------------------------
asg_a0943 : Decision - Check divisible by 5
-------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``is_divisible_by_5()`` which returns if a number is divisible by 5.


'''''''
Samples
'''''''
========  =============  =======  ========
  Number  Explanation    Input    Output
========  =============  =======  ========
       1                          #
========  =============  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


-------------------------------------------------------------
asg_a0945 : Decision - Check even digits in a 5 digit number.
-------------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``count_even_digits()`` which will count the number of even digits in a 5 digit number.


'''''''
Samples
'''''''
========  =============  =======  ========
  Number  Explanation    Input    Output
========  =============  =======  ========
       1                          #
========  =============  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


-----------------------------------------------
asg_a2202 : Decision - Find max of two numbers.
-----------------------------------------------


'''''''''''
Description
'''''''''''

Define a function ``mymax()`` that takes two numbers as arguments and returns the largest of them. Use the if-then-else construct available in your language.


'''''
Notes
'''''


^^^^^^
Note 1
^^^^^^

Do not use the inbuilt functions in the language.


'''''''
Samples
'''''''
========  ========================================================  =======  ========
  Number  Explanation                                               Input      Output
========  ========================================================  =======  ========
       1  Test if the function can find the maximum.                [5, 6]          6
       2  Test the function behaviour when same values are passed.  [5, 5]          5
========  ========================================================  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``int mymax(int num1, int num2)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ==================  =========
  Number  Type    Name    Explanation         Remarks
========  ======  ======  ==================  =========
       1  int     num1    The first number.
       2  int     num2    The second number.
========  ======  ======  ==================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  ==================  =========
  Number  Type    Name    Explanation         Remarks
========  ======  ======  ==================  =========
       1  int     NA      The larger number.
========  ======  ======  ==================  =========


--------------------------------------------------
asg_a2210 : String - Check for value in given list
--------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``is_member()`` that takes a value (i.e. a number, string, etc) x and a list of values a, and returns True if x is a member of a, False otherwise. (Note that this is exactly what the in operator does, but for the sake of the exercise you should pretend Python did not have this operator.) 


'''''''
Samples
'''''''
========  ============================  =================  ========
  Number  Explanation                   Input              Output
========  ============================  =================  ========
       1  Check if function is correst  [2, [1, 2, 3, 4]]  True
========  ============================  =================  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``boolean is_member([ANY] value, [list of ANY] mylist)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ===========  ======  ===========================================================  =========
  Number  Type         Name    Explanation                                                  Remarks
========  ===========  ======  ===========================================================  =========
       1  list of ANY  mylist  List of elements. The list can have data of multiple types.
========  ===========  ======  ===========================================================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  =======  ======  ==============================================  =========
  Number  Type     Name    Explanation                                     Remarks
========  =======  ======  ==============================================  =========
       1  boolean  NA      ``True`` or ``False`` depending on the result.
========  =======  ======  ==============================================  =========


---------------------------------------------------------
asg_a2203 : Decision - Find the maximum of three numbers.
---------------------------------------------------------


'''''''''''
Description
'''''''''''




'''''''
Samples
'''''''
========  ===========================  ============  ========
  Number  Explanation                  Input           Output
========  ===========================  ============  ========
       1  First input is maximum.      [7, 6, 5]            7
       2  Middle one is the maximum.   [5, 7, 6]            7
       3  Last on is the maximum.      [5, 6, 7]            7
       4  Check for negative numbers.  [-5, -6, -7]        -5
       5  All equal.                   [5, 5, 5]            5
========  ===========================  ============  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


*****
Loops
*****


----------------------------------
con_a0403:C Programming - for loop
----------------------------------


'''''''''''
Description
'''''''''''








------------------------------------
con_a0404:C Programming - while loop
------------------------------------


'''''''''''
Description
'''''''''''








----------------------------------------------
asg_a0043 : Loop - Find the length of a number
----------------------------------------------


'''''''''''
Description
'''''''''''


Write a function ``numlen()`` which when passed a number returns the
number of digits in the number.



'''''''
Samples
'''''''
========  ========================================  =======  ========
  Number  Explanation                               Input      Output
========  ========================================  =======  ========
       1  Check if function is proper               [1234]          4
       2  Check if function is proper for negative  [-1234]         4
       3  Check if function is proper               [0]             0
========  ========================================  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case(char *input, char *retval)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ========  ======  ===============================  =========
  Number  Type      Name    Explanation                      Remarks
========  ========  ======  ===============================  =========
       1  C String  input   String to be worked upn
       2  C String  retval  String with the case converted.
========  ========  ======  ===============================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


------------------------------------
asg_a0125 : Loop - Find the ceiling.
------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``my_ceiling()`` which when passed a number returns the ceiling number


'''''''
Samples
'''''''
========  ===========================  =======  ========
  Number  Explanation                  Input      Output
========  ===========================  =======  ========
       1  Check if function is proper  [10.34]        11
========  ===========================  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``int my_ceiling(float number)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  =========================================  =========
  Number  Type    Name    Explanation                                Remarks
========  ======  ======  =========================================  =========
       1  float   number  The number whose ceiling has to be found.
========  ======  ======  =========================================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  ======================================  =========
  Number  Type    Name    Explanation                             Remarks
========  ======  ======  ======================================  =========
       1  int     NA      The ceiling value of the float number.
========  ======  ======  ======================================  =========


-------------------------------------
asg_a0127 : Loop - Floor of a number.
-------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``my_floor(number)`` which returns the floor of the number passed.


'''''''
Samples
'''''''
========  ============================  =======  ========
  Number  Explanation                   Input      Output
========  ============================  =======  ========
       1  Check if function is proper.  [3.4]           3
       2  Check if function is proper.  [1.9]           1
       3  Check if function is proper.  [-3.4]         -4
========  ============================  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``int my_floor(float number)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ===================================  =========
  Number  Type    Name    Explanation                          Remarks
========  ======  ======  ===================================  =========
       3  int     number  Number whose floow has to be found.
========  ======  ======  ===================================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  ==============================================  =========
  Number  Type    Name    Explanation                                     Remarks
========  ======  ======  ==============================================  =========
       1  int     NA      Number which is the floor of the passed float.
========  ======  ======  ==============================================  =========


--------------------------------------------------------------------------------
asg_a0274 : Loop - Write a function ``print_pattern_01()`` which prints pattern.
--------------------------------------------------------------------------------


'''''''''''
Description
'''''''''''


::

    ********
    ********
    ********
    ********
    ********



'''''''
Samples
'''''''
========  =============  =======  ========
Number    Explanation    Input    Output
========  =============  =======  ========
========  =============  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


------------------------------------------------------------------------------------
asg_a0275 : Loop - Write a function ``print_pattern_02()`` which prints the pattern.
------------------------------------------------------------------------------------


'''''''''''
Description
'''''''''''


::

    *****
    ****
    ***
    **
    *



'''''''
Samples
'''''''
========  =============  =======  ========
Number    Explanation    Input    Output
========  =============  =======  ========
========  =============  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


------------------------------------------------------------------------------------
asg_a0276 : Loop - Write a function ``print_pattern_03()`` which prints the pattern.
------------------------------------------------------------------------------------


'''''''''''
Description
'''''''''''


:: 

    *
    **
    ***
    ****
    *****



'''''''
Samples
'''''''
========  =============  =======  ========
Number    Explanation    Input    Output
========  =============  =======  ========
========  =============  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


------------------------------------------------------------------------------------
asg_a0277 : Loop - Write a function ``print_pattern_04()`` which prints the pattern.
------------------------------------------------------------------------------------


'''''''''''
Description
'''''''''''


::
    
    HELLOXHELLO
    HELLO HELLO
    HELL   ELLO
    HEL     LLO
    HE       LO
    H         O
    HE       LO
    HEL     LLO
    HELL   ELLO
    HELLO HELLO
    HELLOXHELLO



'''''''
Samples
'''''''
========  =============  =======  ========
  Number  Explanation    Input    Output
========  =============  =======  ========
       1                          #
========  =============  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


------------------------------------------------------------------------------------
asg_a0278 : Loop - Write a function ``print_pattern_05()`` which prints the pattern.
------------------------------------------------------------------------------------


'''''''''''
Description
'''''''''''


::

    ####*
    ###**
    ##***
    #****
    *****



'''''''
Samples
'''''''
========  =============  =======  ========
Number    Explanation    Input    Output
========  =============  =======  ========
========  =============  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


------------------------------------------------------------------------------------
asg_a0279 : Loop - Write a function ``print_pattern_05()`` which prints the pattern.
------------------------------------------------------------------------------------


'''''''''''
Description
'''''''''''


::

        *
       **
      ***
     ****
    *****



'''''''
Samples
'''''''
========  =============  =======  ========
Number    Explanation    Input    Output
========  =============  =======  ========
========  =============  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


------------------------------------------------------------------------------------
asg_a0280 : Loop - Write a function ``print_pattern_06()`` which prints the pattern.
------------------------------------------------------------------------------------


'''''''''''
Description
'''''''''''


::

       ***********
       ***** *****
       ****   ****
       ***     ***
       **       **
       *         *
       **       **
       ***     ***
       ****   ****
       ***** *****
       ***********



'''''''
Samples
'''''''
========  =============  =======  ========
Number    Explanation    Input    Output
========  =============  =======  ========
========  =============  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


----------------------------------------------------------------------------------
asg_a0281 : Loop - Write a function ``print_pattern_07()`` which prints a pattern.
----------------------------------------------------------------------------------


'''''''''''
Description
'''''''''''


::

         *
        ***
       *****
      *******
     *********
      *******
       *****
        ***
         *



'''''''
Samples
'''''''
========  =============  =======  ========
Number    Explanation    Input    Output
========  =============  =======  ========
========  =============  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


----------------------------------------------------------------------------------
asg_a0282 : Loop - Write a function ``print_pattern_08()`` which prints a pattern.
----------------------------------------------------------------------------------


'''''''''''
Description
'''''''''''


::

    *********
    *******
    *****
    ***
    *



'''''''
Samples
'''''''
========  =============  =======  ========
Number    Explanation    Input    Output
========  =============  =======  ========
========  =============  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


------------------------------------------------------------------------------------
asg_a0283 : Loop - Write a function ``print_pattern_10()`` which prints the pattern.
------------------------------------------------------------------------------------


'''''''''''
Description
'''''''''''


::

    *********
     *******
      *****
       ***
        *
       ***
      *****
     *******
    *********



'''''''
Samples
'''''''
========  =============  =======  ========
Number    Explanation    Input    Output
========  =============  =======  ========
========  =============  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


--------------------------------------------------------------------------------
asg_a0284 : Loop - Write a function ``print_pattern_11()`` to print the pattern.
--------------------------------------------------------------------------------


'''''''''''
Description
'''''''''''


::

            *********
           *********
          *********
         *********
        *********
       *********
      *********



'''''''
Samples
'''''''
========  =============  =======  ========
Number    Explanation    Input    Output
========  =============  =======  ========
========  =============  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


--------------------------------------------------------------------------------------
asg_a0664 : Loop - Write a program to find all the prime numbers in a range of 1 to N.
--------------------------------------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``generate_numbers()`` which will generate numbers from 1 to N and print it on the screen.


'''''''
Samples
'''''''
========  =============  =======  ========
Number    Explanation    Input    Output
========  =============  =======  ========
========  =============  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


----------------------------------------------------------------------------
asg_a0665 : Loop - Write a function to find the factorial of a given number.
----------------------------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``find_factorial(number)`` which taked a positive integer as input and returns the factorial of that number.


'''''
Notes
'''''


^^^^^^
Note 1
^^^^^^

null


'''''''
Samples
'''''''
========  =============  =======  ========
Number    Explanation    Input    Output
========  =============  =======  ========
========  =============  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case(char *input, char *retval)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ========  ======  ===============================  =========
  Number  Type      Name    Explanation                      Remarks
========  ========  ======  ===============================  =========
       1  C String  input   String to be worked upn
       2  C String  retval  String with the case converted.
========  ========  ======  ===============================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


----------------------------------------------------------------------------
asg_a0823 : Loop - Write a program for calculating the factorial of a number
----------------------------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``calculate_factorial()`` which calculates the factorial of a passed number.


'''''''
Samples
'''''''
========  ========================  =======  ========
  Number  Explanation                 Input    Output
========  ========================  =======  ========
       1  Check for a simple case.        3         6
       2  Check for corner case 1.        1         1
       3  Check for corner case 0.        0         1
========  ========================  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


----------------------------------------------------------
asg_a0824 : Loop - Write a function to calculate pow(x,n)?
----------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``find_pow(x,n)`` which takes a number and the power to be calculated and returns the result of x to the power n


'''''''
Samples
'''''''
========  ==============================================  =======  ========
  Number  Explanation                                     Input      Output
========  ==============================================  =======  ========
       1  Check if function is proper                     [2, 2]      4
       2  Check if function is proper                     [5, 3]    125
       3  Check if function is proper for negative power  [8, -1]     0.125
========  ==============================================  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case(char *input, char *retval)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ========  ======  ===============================  =========
  Number  Type      Name    Explanation                      Remarks
========  ========  ======  ===============================  =========
       1  C String  input   String to be worked upn
       2  C String  retval  String with the case converted.
========  ========  ======  ===============================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


--------------------------------------------------------------------------------------------------------------------------------------------------
asg_a0827 : Loop - How to generate fibonacci numbers? How to find out if a given number is a fibonacci number or not? Write C programs to do both.
--------------------------------------------------------------------------------------------------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``gen_fibboniaci()`` which generates fibbonicai numbers till the number passed.


'''''''
Samples
'''''''
========  =============  =======  ============
  Number  Explanation      Input  Output
========  =============  =======  ============
       1                       5  [1, 1, 2, 3]
       2                       5  [1, 1, 2, 3]
========  =============  =======  ============


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


----------------------------------------------------------------------
asg_a0834 : Loop - Write a function to convert from decimal to binary.
----------------------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``convert_base(decimal_number, base)`` to convert the input decimal number to any of the base that is specified from Octal(8), Binary(2) or Hexadecimal(16)


'''''''
Samples
'''''''
========  ===========================================  =========  ========
  Number  Explanation                                  Input        Output
========  ===========================================  =========  ========
       1  Check if function is proper for binary       [8, 2]         1000
       2  Check if function is proper for octal        [30, 8]          36
       3  Check if function is proper for hexadecimal  [400, 16]       190
========  ===========================================  =========  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case(char *input, char *retval)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ========  ======  ===============================  =========
  Number  Type      Name    Explanation                      Remarks
========  ========  ======  ===============================  =========
       1  C String  input   String to be worked upn
       2  C String  retval  String with the case converted.
========  ========  ======  ===============================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


-------------------------------------------------------------------
asg_a0836 : Loop - Write a function to find the GCD of two numbers.
-------------------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``find_gcd(num1, num2)`` which takes two number as input and calculate and return the GCD.


'''''''
Samples
'''''''
========  =============  =======  ========
Number    Explanation    Input    Output
========  =============  =======  ========
========  =============  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case(char *input, char *retval)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ========  ======  ===============================  =========
  Number  Type      Name    Explanation                      Remarks
========  ========  ======  ===============================  =========
       1  C String  input   String to be worked upn
       2  C String  retval  String with the case converted.
========  ========  ======  ===============================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


-----------------------------------------------------
asg_a0864 : Loop - Write a function to round numbers.
-----------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``round_number(double number)`` which takes input a double type number and returns the rounded number.


'''''''
Samples
'''''''
========  ===============================  ========  ========
  Number  Explanation                      Input       Output
========  ===============================  ========  ========
       1  Check if the function is proper  [16.34]         16
       2  Check if the function is proper  [16.57]         17
       3  Check if the function is proper  [-20.51]       -19
========  ===============================  ========  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case(char *input, char *retval)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ========  ======  ===============================  =========
  Number  Type      Name    Explanation                      Remarks
========  ========  ======  ===============================  =========
       1  C String  input   String to be worked upn
       2  C String  retval  String with the case converted.
========  ========  ======  ===============================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


-----------------------------------------------------------------------------------
asg_a0865 : Loop - How can we sum the digits of a given number in single statement?
-----------------------------------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``sum_number_digits(int number)`` which takes input an int type number and returns the sum of the digits of that number. You need to write the function in such a way that the whole calculation is done within a single statement only.


'''''''
Samples
'''''''
========  ===============================  =======  ========
  Number  Explanation                      Input      Output
========  ===============================  =======  ========
       1  Check if the function is proper  [123]           6
       2  Check if the function is proper  [-123]          6
       3  Check if the function is proper  [0]             0
========  ===============================  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case(char *input, char *retval)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ========  ======  ===============================  =========
  Number  Type      Name    Explanation                      Remarks
========  ========  ======  ===============================  =========
       1  C String  input   String to be worked upn
       2  C String  retval  String with the case converted.
========  ========  ======  ===============================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


-----------------------------------------------------------------------------------------------------
asg_a0870 : Loop - How to generate prime numbers? How to generate the next prime after a given prime?
-----------------------------------------------------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``generate_prime(int prime_number)`` which takes input a prime number and returns the next prime number after that input number. If input number is not a prime, return 0.


'''''''
Samples
'''''''
========  ===============================  =======  ========
  Number  Explanation                      Input      Output
========  ===============================  =======  ========
       1  Check if the function is proper  [3]             5
       2  Check if the function is proper  [12]            0
========  ===============================  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case(char *input, char *retval)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ========  ======  ===============================  =========
  Number  Type      Name    Explanation                      Remarks
========  ========  ======  ===============================  =========
       1  C String  input   String to be worked upn
       2  C String  retval  String with the case converted.
========  ========  ======  ===============================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


-------------------------------------------------------
asg_a0876 : Loop - Write your own square root function.
-------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``sqrt(int number)`` which returns the calcualtes square root of the input number.


'''''''
Samples
'''''''
========  ===============================  =======  ========
  Number  Explanation                      Input      Output
========  ===============================  =======  ========
       1  Check if the function is proper  [64]         8
       2  Check if the function is proper  [20]         4.47
       3  Check if the function is proper  [100]       10
========  ===============================  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case(char *input, char *retval)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ========  ======  ===============================  =========
  Number  Type      Name    Explanation                      Remarks
========  ========  ======  ===============================  =========
       1  C String  input   String to be worked upn
       2  C String  retval  String with the case converted.
========  ========  ======  ===============================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


----------------------------------------------------
asg_a0923 : Loop - Convert a decimal to hexadecimal.
----------------------------------------------------


'''''''''''
Description
'''''''''''




'''''''
Samples
'''''''
========  =====================================  ==========  ==========
  Number  Explanation                            Input       Output
========  =====================================  ==========  ==========
       1  Check for a general case.              HelloWorld  HeLlOwOrLd
       2  Check for all "lowercase" characters.  helloworld  HeLlOwOrLd
       3  Check for all "UPPERCASE" characters.  HELLOWORLD  HeLlOwOrLd
========  =====================================  ==========  ==========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


-----------------------------------------------------------
asg_a0924 : Loop - Convert a decimal to a number in base 6.
-----------------------------------------------------------


'''''''''''
Description
'''''''''''




'''''''
Samples
'''''''
========  =====================================  ==========  ==========
  Number  Explanation                            Input       Output
========  =====================================  ==========  ==========
       1  Check for a general case.              HelloWorld  HeLlOwOrLd
       2  Check for all "lowercase" characters.  helloworld  HeLlOwOrLd
       3  Check for all "UPPERCASE" characters.  HELLOWORLD  HeLlOwOrLd
========  =====================================  ==========  ==========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


----------------------------------------------
asg_a0925 : Loop - Convert a decimal to octal.
----------------------------------------------


'''''''''''
Description
'''''''''''




'''''''
Samples
'''''''
========  ===============================  =======  ========
  Number  Explanation                      Input      Output
========  ===============================  =======  ========
       1  Check if the function is proper  [3]             5
       2  Check if the function is proper  [12]            0
========  ===============================  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


----------------------------------------------
asg_a0926 : Loop - Convert a octal to decimal.
----------------------------------------------


'''''''''''
Description
'''''''''''




'''''''
Samples
'''''''
========  ===============================  =======  ========
  Number  Explanation                      Input      Output
========  ===============================  =======  ========
       1  Check if the function is proper  [3]             5
       2  Check if the function is proper  [12]            0
========  ===============================  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


----------------------------------------------------
asg_a0927 : Loop - Convert a hexadecimal to decimal.
----------------------------------------------------


'''''''''''
Description
'''''''''''




'''''''
Samples
'''''''
========  =====================================  ==========  ==========
  Number  Explanation                            Input       Output
========  =====================================  ==========  ==========
       1  Check for a general case.              HelloWorld  HeLlOwOrLd
       2  Check for all "lowercase" characters.  helloworld  HeLlOwOrLd
       3  Check for all "UPPERCASE" characters.  HELLOWORLD  HeLlOwOrLd
========  =====================================  ==========  ==========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


--------------------------------------------------
asg_a0928 : Loop - Convert a hexadecimal to octal.
--------------------------------------------------


'''''''''''
Description
'''''''''''




'''''''
Samples
'''''''
========  ===============================  =======  ========
  Number  Explanation                      Input      Output
========  ===============================  =======  ========
       1  Check if the function is proper  [3]             5
       2  Check if the function is proper  [12]            0
========  ===============================  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


-----------------------------------------------
asg_a0929 : Loop - Convert a decimal to binary.
-----------------------------------------------


'''''''''''
Description
'''''''''''




'''''''
Samples
'''''''
========  ===============================  =======  ========
  Number  Explanation                      Input      Output
========  ===============================  =======  ========
       1  Check if the function is proper  [3]             5
       2  Check if the function is proper  [12]            0
========  ===============================  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


-----------------------------------------------
asg_a0930 : Loop - Convert a binary to decimal.
-----------------------------------------------


'''''''''''
Description
'''''''''''




'''''''
Samples
'''''''
========  =====================================  ==========  ==========
  Number  Explanation                            Input       Output
========  =====================================  ==========  ==========
       1  Check for a general case.              HelloWorld  HeLlOwOrLd
       2  Check for all "lowercase" characters.  helloworld  HeLlOwOrLd
       3  Check for all "UPPERCASE" characters.  HELLOWORLD  HeLlOwOrLd
========  =====================================  ==========  ==========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


---------------------------------------------------
asg_a0931 : Loop - Convert a hexadecimal to binary.
---------------------------------------------------


'''''''''''
Description
'''''''''''




'''''''
Samples
'''''''
========  =====================================  ==========  ==========
  Number  Explanation                            Input       Output
========  =====================================  ==========  ==========
       1  Check for a general case.              HelloWorld  HeLlOwOrLd
       2  Check for all "lowercase" characters.  helloworld  HeLlOwOrLd
       3  Check for all "UPPERCASE" characters.  HELLOWORLD  HeLlOwOrLd
========  =====================================  ==========  ==========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


---------------------------------------------------
asg_a0932 : Loop - Convert a binary to hexadecimal.
---------------------------------------------------


'''''''''''
Description
'''''''''''




'''''''
Samples
'''''''
========  =====================================  ==========  ==========
  Number  Explanation                            Input       Output
========  =====================================  ==========  ==========
       1  Check for a general case.              HelloWorld  HeLlOwOrLd
       2  Check for all "lowercase" characters.  helloworld  HeLlOwOrLd
       3  Check for all "UPPERCASE" characters.  HELLOWORLD  HeLlOwOrLd
========  =====================================  ==========  ==========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


---------------------------------------------
asg_a0933 : Loop - Convert a binary to octal.
---------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``alter_case_1("Hello World")`` which converts the case of the characters. The first character should be capital.
Special charcters are counted as a character but no operation is performed on them.


'''''''
Samples
'''''''
========  =====================================  ==========  ==========
  Number  Explanation                            Input       Output
========  =====================================  ==========  ==========
       1  Check for a general case.              HelloWorld  HeLlOwOrLd
       2  Check for all "lowercase" characters.  helloworld  HeLlOwOrLd
       3  Check for all "UPPERCASE" characters.  HELLOWORLD  HeLlOwOrLd
========  =====================================  ==========  ==========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


---------------------------------------------
asg_a0934 : Loop - Convert a octal to binary.
---------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``convert_octal_to_binary()``.


'''''''
Samples
'''''''
========  ===============================  =======  ========
  Number  Explanation                      Input      Output
========  ===============================  =======  ========
       1  Check if the function is proper  [3]             5
       2  Check if the function is proper  [12]            0
========  ===============================  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


-------------------------------------------------------
asg_a2246 : Loop - Sum of even terms in fibnocci series
-------------------------------------------------------


'''''''''''
Description
'''''''''''

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89. Write a function which returns the sum of the even numbers in the Fibonacci series under a number specefied in the function call. The function name should be ``find_even_numbers_fibonacci()``.


'''''''
Samples
'''''''
========  =============  =======  ========
  Number  Explanation    Input    Output
========  =============  =======  ========
       1                          #
========  =============  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``int find_even_numbers_fibonacci(int n)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ==================================================================  =========
  Number  Type    Name    Explanation                                                         Remarks
========  ======  ======  ==================================================================  =========
       1  int     int     The highest number till which we have to find the fibonacci terms.
========  ======  ======  ==================================================================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =================  =========
  Number  Type    Name    Explanation        Remarks
========  ======  ======  =================  =========
       1  int     NA      The result value.
========  ======  ======  =================  =========


-----------------------------------
asg_a2247 : Loop - nth prime number
-----------------------------------


'''''''''''
Description
'''''''''''

By listing the first six prime numbers: 2, 3, 5, 7, 11, and 13, we can see that the 6th prime is 13. Write a function ``find_nth_prime()``.


'''''''
Samples
'''''''
========  =============  =======  ========
  Number  Explanation    Input    Output
========  =============  =======  ========
       1                          #
========  =============  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``long long find_nth_prime(int n)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  =====================================  =========
  Number  Type    Name    Explanation                            Remarks
========  ======  ======  =====================================  =========
       1  int     n       The nth prime number to be found out.
========  ======  ======  =====================================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  =========  ======  ==================================  =========
  Number  Type       Name    Explanation                         Remarks
========  =========  ======  ==================================  =========
       1  long long  NA      The value of the nth prime number.
========  =========  ======  ==================================  =========


--------------------------------------------------------------
asg_a2424 : Loop - Reverse a number with any number of digits.
--------------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``find_occured_min(int arr)`` to find the element which has occurred for the minimum number of times in an array. Return 0 if the array is empty. Return 1 if all the numbers have appeared equal times.


'''''''
Samples
'''''''
========  ==================================  ===============  ========
  Number  Explanation                         Input              Output
========  ==================================  ===============  ========
       1  Check for a general case.           [1, 2, 2, 4, 4]         1
       2  Check when zero as an input number  [1, 2, 0, 4]            1
       3  Check for empty array               []                      0
========  ==================================  ===============  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


------------------------------------------------------------
asg_a2425 : Loop - Count the odd numbers in the even places.
------------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``count_odd_at_even()`` which gives the number of odd digits which are there at even positions.


'''''''
Samples
'''''''
========  ==================================  ===============  ========
  Number  Explanation                         Input              Output
========  ==================================  ===============  ========
       1  Check for a general case.           [1, 2, 2, 4, 4]         1
       2  Check when zero as an input number  [1, 2, 0, 4]            1
       3  Check for empty array               []                      0
========  ==================================  ===============  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


******
Arrays
******


--------------------------------
con_a0411:C Programming - Arrays
--------------------------------


'''''''''''
Description
'''''''''''








-----------------------------------------------------------------------------------------------------------------------
asg_a0651 : 2DArray - Find the product of all the elements stored in the array? What can be the possible problems here.
-----------------------------------------------------------------------------------------------------------------------


'''''''''''
Description
'''''''''''


Write a function ``product_of_array(int arr)`` which multiplies all the elements of the array
and returns the multiplied result value. The function takes a 2D array as input.
Return 0 if the array is empty.



'''''''
Samples
'''''''
========  ==================================  ==============  ========
  Number  Explanation                         Input             Output
========  ==================================  ==============  ========
       1  Check for a general case.           [10, 20, 2, 4]      1600
       2  Check when zero as an input number  [10, 20, 0, 4]         0
       3  Check for empty array               []                     0
========  ==================================  ==============  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


----------------------------------------------------------------------
asg_a0652 : 2DArray - Find the maximum and minimum element of an array
----------------------------------------------------------------------


'''''''''''
Description
'''''''''''


Write a function ``find_min_max(int arr)`` which returns the minimum and maximum element
contained in a 2D array. An integer array is passed as input to the function.
Return 0 if the array is empty.



'''''''
Samples
'''''''
========  ==================================  ==================  =========
  Number  Explanation                         Input               Output
========  ==================================  ==================  =========
       1  Check for a general case.           [10, 20, 2, 4]      [2, 20]
       2  Check when zero as an input number  [10, 20, 0, 4]      [0, 20]
       3  Check for empty array               []                  0
       4  Check for negative values           [-20, -10, -5, -1]  [-20, -1]
========  ==================================  ==================  =========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


------------------------------------------------
asg_a0654 : Array - Find the median of the array
------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``find_median_array(int arr)`` which calcualates the median of the elements of the array and returns the calculated value. Return 0 if the array is empty.


'''''''
Samples
'''''''
========  ==================================  ====================  ========
  Number  Explanation                         Input                   Output
========  ==================================  ====================  ========
       1  Check for a general case.           [10, 20, 1, 2, 4]          1
       2  Check when zero as an input number  [10, 20, 2, 1, 0, 4]       1.5
       3  Check for empty array               []                         0
       4  Check for negative values           [-2, -4, -2, -7]          -3
========  ==================================  ====================  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


---------------------------------------------------------
asg_a0655 : 2DArray - Find element occuring maximum times
---------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``find_occured_max(int arr)`` to find the element which has occurred for the maximum number of times in an array. Return 0 if the array is empty. Return 1 if all the numbers have appeared equal times.


'''''''
Samples
'''''''
========  ==================================  ============  ========
  Number  Explanation                         Input           Output
========  ==================================  ============  ========
       1  Check for a general case.           [1, 2, 2, 4]         2
       2  Check when zero as an input number  [1, 2, 0, 4]         1
       3  Check for empty array               []                   0
========  ==================================  ============  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


-------------------------------------------------------------------------------------------------------------------------------------------------------
asg_a0656 : Array - Fill an array with the multiples of 3, then remove the numbers which are divisible by 5. Fill the empty spaces so generated with -1
-------------------------------------------------------------------------------------------------------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``fill_array(int n)`` which fills the array of n length with multiples of 3. Then remove those elements which are divisible by 5. This would leave you with few empty spaces in the array. Fill these empty spaces with -1. Return the finaly generated array.


'''''''
Samples
'''''''
========  ==================================  =======  =====================================
  Number  Explanation                         Input    Output
========  ==================================  =======  =====================================
       1  Check for a general case.           [5]      [3, 6, 9, 12, -1]
       2  Check when zero as an input number  [10]     [3, 6, 9, 12, -1, 18, 21, 24, 27, -1]
       3  Check for empty array               [0]      0
========  ==================================  =======  =====================================


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


------------------------------------------------------
asg_a0657 : Array - Find an array with random elements
------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``fill_random(int n)`` to fill an array of length n with randomly generated elements. Return the newly generated array.


'''''''
Samples
'''''''
========  =========================  =======  ===========
  Number  Explanation                Input    Output
========  =========================  =======  ===========
       1  Check for a general case.  [3]      [2, 10, 23]
========  =========================  =======  ===========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


-------------------------------------------------------------
asg_a0661 : 2DArray - Find the sum of elements in a 2D array.
-------------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``find_array_sum(int arr[])`` which takes input an integer array and return the sum of the all the elements of the array. Return 0 if the array is empty.


'''''''
Samples
'''''''
========  ===================================  =============  ========
  Number  Explanation                          Input            Output
========  ===================================  =============  ========
       1  Check for a general case.            [1, 2, 2, 4]          9
       2  Check when zero as an input number.  [1, 2, 0, 4]          7
       3  Check for an negative input number.  [1, -2, 0, 4]         3
       4  Check for an empty array.            []                    0
========  ===================================  =============  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


-----------------------------------------------------------------------
asg_a0803 : Array - Find the Prime numbers using Sieve of Eratosthenes.
-----------------------------------------------------------------------


'''''''''''
Description
'''''''''''




'''''''
Samples
'''''''
========  =====================================  ==========  ==========
  Number  Explanation                            Input       Output
========  =====================================  ==========  ==========
       1  Check for a general case.              HelloWorld  HeLlOwOrLd
       2  Check for all "lowercase" characters.  helloworld  HeLlOwOrLd
       3  Check for all "UPPERCASE" characters.  HELLOWORLD  HeLlOwOrLd
========  =====================================  ==========  ==========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


-----------------------------------------------
asg_a0890 : Array - Find out 1500th ugly number
-----------------------------------------------


'''''''''''
Description
'''''''''''

Ugly numbers are numbers whose only prime factors are 2, 3 or 5. The sequence 1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 15, ...  shows the first 11 ugly numbers.  By convention, 1 is included.  Write a function ``find_ugly(int nth)`` to find and print the 1500th ugly number. The function takes input the nth place which is to be found for ugly number. Here nth = 1500


'''''''
Samples
'''''''
========  ===============================  =======  ========
  Number  Explanation                      Input      Output
========  ===============================  =======  ========
       1  Check if the function is proper  [3]             5
       2  Check if the function is proper  [12]            0
========  ===============================  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case(char *input, char *retval)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ========  ======  ===============================  =========
  Number  Type      Name    Explanation                      Remarks
========  ========  ======  ===============================  =========
       1  C String  input   String to be worked upn
       2  C String  retval  String with the case converted.
========  ========  ======  ===============================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


-----------------------------------------------------------------------------------------------
asg_a2207 : Array - Perform sum and multiplication of multiple elements in a array/list/vector.
-----------------------------------------------------------------------------------------------


'''''''''''
Description
'''''''''''

Define a function mysum() and a function mymultiply() that sums and multiplies (respectively) all the numbers in a list/array of numbers. For example, sum([1, 2, 3, 4]) should return 10, and multiply([1, 2, 3, 4]) should return 24.


'''''''
Samples
'''''''
========  ====================================================  ===========================  ====================
  Number  Explanation                                           Input                                      Output
========  ====================================================  ===========================  ====================
       1  Sum works correctly.                                  [1, 2, 3, 4]                                   10
       2  Sum works correctly for negative numbers.             [1, -1, 2, -2, 4]                               4
       3  Multiplication works correctly.                       [1, 2, 3, 4, 5]                               120
       4  Multiplication works correctly for negative numbers.  [1, -2, 3, 4]                                 -24
       5  Multiplication works correctly for large numbers.     [1000000, 2000000, 9000000]  18000000000000000000
========  ====================================================  ===========================  ====================


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``int mysum((list of integers) int_list)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ================  ========  ===================================  =========
  Number  Type              Name      Explanation                          Remarks
========  ================  ========  ===================================  =========
       1  list of integers  int_list  List of integers to be worked upon.
========  ================  ========  ===================================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  ==============================  =========
  Number  Type    Name    Explanation                     Remarks
========  ======  ======  ==============================  =========
       1  int     NA      Sum of the elements of a list.
========  ======  ======  ==============================  =========


---------------------------------------------------------
asg_a2245 : Array - Sum of multiples of 3 or 5 below 1000
---------------------------------------------------------


'''''''''''
Description
'''''''''''

If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23. Write a function ``sum_all_multiples()`` which returns the sum of all the multiples of 3 and 5 below 1000.


'''''''
Samples
'''''''
========  ============================  =======  ========
  Number  Explanation                   Input      Output
========  ============================  =======  ========
       1  Check if function is correct           23331668
========  ============================  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``int sum_all_multiples()``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ============  ======  =================================  =========
  Number  Type          Name    Explanation                        Remarks
========  ============  ======  =================================  =========
       1  No Arguments  None    The function takes no arguements.
========  ============  ======  =================================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  ===========================  =========
  Number  Type    Name    Explanation                  Remarks
========  ======  ======  ===========================  =========
       1  int     NA      The calculted return value.
========  ======  ======  ===========================  =========


-------------------------------------------------------
asg_a2422 : Array - Find element occuring minimum times
-------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``find_occured_min(int arr)`` to find the element which has occurred for the minimum number of times in an array. Return 0 if the array is empty. Return 1 if all the numbers have appeared equal times.


'''''''
Samples
'''''''
========  ==================================  ===============  ========
  Number  Explanation                         Input              Output
========  ==================================  ===============  ========
       1  Check for a general case.           [1, 2, 2, 4, 4]         1
       2  Check when zero as an input number  [1, 2, 0, 4]            1
       3  Check for empty array               []                      0
========  ==================================  ===============  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


*******
Strings
*******


---------------------------------
con_a0412:C Programming - Strings
---------------------------------


'''''''''''
Description
'''''''''''








---------------------------------------------------
asg_a0001 : String - Change the case of a sentance.
---------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``alter_case_1("Hello World")`` which converts the case of the characters. The first character should be capital.
Special charcters are counted as a character but no operation is performed on them.


'''''''
Samples
'''''''
========  =====================================  ==========  ==========
  Number  Explanation                            Input       Output
========  =====================================  ==========  ==========
       1  Check for a general case.              HelloWorld  HeLlOwOrLd
       2  Check for all "lowercase" characters.  helloworld  HeLlOwOrLd
       3  Check for all "UPPERCASE" characters.  HELLOWORLD  HeLlOwOrLd
========  =====================================  ==========  ==========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


----------------------------------------------------------------------------------
asg_a0003 : String - Program to have alternate case in a string, like "hElLoWoRlD"
----------------------------------------------------------------------------------


'''''''''''
Description
'''''''''''


Write a function ``alter_case_2("Hello World")`` which converts the case of
the characters. The first character should be small.'



'''''
Notes
'''''


^^^^^^
Note 1
^^^^^^

This is a general note.


'''''''
Samples
'''''''
========  ======================================================  ==================  ==================
  Number  Explanation                                             Input               Output
========  ======================================================  ==================  ==================
       1  See if the function works correctly.                    HelloWorld          hELLOwORLD
       2  See if it works correctly on all lowercase characters.  helloworld          hELLOWORLD
       3  See if it works correctly on all Uppercase chars        HELLOWORLD          helloworld
       4  See if it works correctly on blank strings.
       5  See if it works correctly on special characters.        Hello!Wo#rl%  5 4d  hELLO!wO#RL%  5 4D
========  ======================================================  ==================  ==================


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_2(char *input, char *retval)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ========  ======  ===============================  =========
  Number  Type      Name    Explanation                      Remarks
========  ========  ======  ===============================  =========
       1  C String  input   String to be worked upn
       2  C String  retval  String with the case converted.
========  ========  ======  ===============================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


---------------------------------------------------------------
asg_a0004 : String - Find the lowercase characters in a string.
---------------------------------------------------------------


'''''''''''
Description
'''''''''''


Write a function ``find_lowercase("HelloWorld")`` which returns a string
with lowercase characters present in the string.



'''''
Notes
'''''


^^^^^^
Note 1
^^^^^^

This is a general note.


'''''''
Samples
'''''''
========  ===================================================  ===================  ==========
  Number  Explanation                                          Input                Output
========  ===================================================  ===================  ==========
       1  Check if the function works                          Hello World          elloorld
       2  Check if it works if all the characters are capital  HELLOWORLD
       3  Check if it works for all the characters small       helloworld           helloworld
       4  Check if special chars are removed                   Hell o ! @#$% world  elloworld
========  ===================================================  ===================  ==========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void find_lowercase(char *input, char *retval)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ========  ======  =====================================  =========
  Number  Type      Name    Explanation                            Remarks
========  ========  ======  =====================================  =========
       1  C String  input   String to be worked upon.
       2  C String  retval  String with the lowercase characters.
========  ========  ======  =====================================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


----------------------------------------------------------------
asg_a0007 : String - Find the upper case characters in a string.
----------------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``find_uppercase("Hello")`` which returns a string with all the upper case characters in the string passed.


'''''
Notes
'''''


^^^^^^
Note 1
^^^^^^

This is sample note


'''''''
Samples
'''''''
========  =======================================================================  ================  ==========
  Number  Explanation                                                              Input             Output
========  =======================================================================  ================  ==========
       1  Check if the function works.                                             Hello             H
       2  Check if the function works if string has all the upper case charaters.  HELLO WORLD       HELLOWORLD
       3  Check if the function works if string has all the lower case characters  hello world
       4  Check if the function works if string has some special characters.       Hello !@#$ World  HW
========  =======================================================================  ================  ==========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case(char *input, char *retval)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ========  ======  ===============================  =========
  Number  Type      Name    Explanation                      Remarks
========  ========  ======  ===============================  =========
       1  C String  input   String to be worked upn
       2  C String  retval  String with the case converted.
========  ========  ======  ===============================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


----------------------------------------------------------------------
asg_a0013 : String - Toggle the case of all the charcters in a string.
----------------------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``toggle_case()`` which takes input a string and toggles the case of all the characters in the string.


'''''
Notes
'''''


^^^^^^
Note 1
^^^^^^

Do not use the inbuilt functions in the language.


'''''''
Samples
'''''''
========  =================================================  ===============  ===============
  Number  Explanation                                        Input            Output
========  =================================================  ===============  ===============
       1  Check for basic functionality.                     HelloWorld       hELLOwORLD
       2  Check for functionality with spaces.               Hello World      hELLO wORLD
       3  Check for functionality with special characters.   Hello @#$ World  hELLO @#$ wORLD
       4  Check for functionality with blank string.
       5  Check for functionality with alphanumeric string.  He12Wo           hE12wO
========  =================================================  ===============  ===============


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``char * toggle_case(str string)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================================  =========
  Number  Type    Name    Explanation                               Remarks
========  ======  ======  ========================================  =========
       1  char *  string  The string whose case has to be toggled.
========  ======  ======  ========================================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =================================  =========
  Number  Type    Name    Explanation                        Remarks
========  ======  ======  =================================  =========
       1  char *  NA      The string with the case toggled.
========  ======  ======  =================================  =========


------------------------------------------------------------------
asg_a0016 : String - Function to check if character is a consonant
------------------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``is_consonant()`` that takes a character (string of length 1) and checks if the character is a consonant or not.


'''''
Notes
'''''


^^^^^^
Note 1
^^^^^^

Do not use the inbuilt functions in the language.


'''''''
Samples
'''''''
========  =================================================  =======  ========
  Number  Explanation                                        Input    Output
========  =================================================  =======  ========
       1  Check if function is working.                      A        False
       2  Check if function is working.                      B        True
       3  Check if function is working for numeric.          2        False
       4  Check if function is working for special symbols.  #        False
       5  Check if function is working for blank input.               False
========  =================================================  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``int is_consonant(char character)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  =========  ====================  =========
  Number  Type    Name       Explanation           Remarks
========  ======  =========  ====================  =========
       1  char    character  The input character.
========  ======  =========  ====================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =====================================================================  =========
  Number  Type    Name    Explanation                                                            Remarks
========  ======  ======  =====================================================================  =========
       1  int     NA      ``0`` if the character is consonant else return a ``Non-Zero`` value.
========  ======  ======  =====================================================================  =========


-----------------------------------------------------------
asg_a0154 : String - Design a algorithm to rotate a string.
-----------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``rotate_string_left()`` which takes input the number of characters to rotate and rotates the passed string.


'''''
Notes
'''''


^^^^^^
Note 1
^^^^^^

Do not use the inbuilt functions in the language.


'''''''
Samples
'''''''
========  =============  ==================  ===========
  Number  Explanation    Input               Output
========  =============  ==================  ===========
       1                 ["Hello World", 3]  lo WorldHel
========  =============  ==================  ===========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``char *rotate_string_left (char * string, int n)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ======================================================  =========
  Number  Type    Name    Explanation                                             Remarks
========  ======  ======  ======================================================  =========
       1  char *  string  The string to be worked upon.
       2  int     n       The number of characters you should rotate the string.
========  ======  ======  ======================================================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  ===================  =========
  Number  Type    Name    Explanation          Remarks
========  ======  ======  ===================  =========
       1  char *  NA      The rotated string.
========  ======  ======  ===================  =========


-------------------------------------------------------------------
asg_a0669 : String - write a function to convert the epoch to date.
-------------------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function convert_epoch_to_date(


'''''''
Samples
'''''''
========  ===============================  =======  ========
  Number  Explanation                      Input      Output
========  ===============================  =======  ========
       1  Check if the function is proper  [3]             5
       2  Check if the function is proper  [12]            0
========  ===============================  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``int my_floor(float number)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ===================================  =========
  Number  Type    Name    Explanation                          Remarks
========  ======  ======  ===================================  =========
       3  int     number  Number whose floow has to be found.
========  ======  ======  ===================================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  ==============================================  =========
  Number  Type    Name    Explanation                                     Remarks
========  ======  ======  ==============================================  =========
       1  int     NA      Number which is the floor of the passed float.
========  ======  ======  ==============================================  =========


----------------------------------------------------------------------------------------
asg_a0753 : String - Insert the word "Hello" in the middle. of the words in an sentence.
----------------------------------------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``insert_hello(str sentence)`` which inserts the word ``Hello`` in between of each word present in the passed ``Sentence``. (Eg. How are You? to How Hello are Hello You hello?)


'''''
Notes
'''''


^^^^^^
Note 1
^^^^^^

Do not use the inbuilt functions in the language.


'''''''
Samples
'''''''
========  =============  =======  ========
Number    Explanation    Input    Output
========  =============  =======  ========
========  =============  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``char * insert_hello(char * sentence)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ========  ===================  =========
  Number  Type    Name      Explanation          Remarks
========  ======  ========  ===================  =========
       1  char *  sentence  The input sentence.
========  ======  ========  ===================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  NA      The resulting String is.
========  ======  ======  ========================  =========


-----------------------------------------------------------------------------
asg_a0873 : String - Write a function to remove all the spaces from a string.
-----------------------------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``trim_string(String str)`` to remove all the spaces from a string. All spaces include leading spaces, trailing spaces and the spaces in between the words.


'''''
Notes
'''''


^^^^^^
Note 1
^^^^^^

Do not use the inbuilt functions in the language.


'''''''
Samples
'''''''
========  =====================================  =========================  ====================
  Number  Explanation                            Input                      Output
========  =====================================  =========================  ====================
       1  Check if it works in the simple case.  Hello World! How are you.  HelloWordl!Howareyou
========  =====================================  =========================  ====================


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``char * toggle_case(char *string)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ==========================================  =========
  Number  Type    Name    Explanation                                 Remarks
========  ======  ======  ==========================================  =========
       1  char *  string  The string whose spaces has to be removed.
========  ======  ======  ==========================================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  ====================================  =========
  Number  Type    Name    Explanation                           Remarks
========  ======  ======  ====================================  =========
       1  char *  NA      The string with the spaces removed..
========  ======  ======  ====================================  =========


-----------------------------------------
asg_a0935 : String - Add two Hex Strings.
-----------------------------------------


'''''''''''
Description
'''''''''''




'''''''
Samples
'''''''
========  =====================================  ==========  ==========
  Number  Explanation                            Input       Output
========  =====================================  ==========  ==========
       1  Check for a general case.              HelloWorld  HeLlOwOrLd
       2  Check for all "lowercase" characters.  helloworld  HeLlOwOrLd
       3  Check for all "UPPERCASE" characters.  HELLOWORLD  HeLlOwOrLd
========  =====================================  ==========  ==========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


-------------------------------------------
asg_a0936 : String - Add two Octal Strings.
-------------------------------------------


'''''''''''
Description
'''''''''''




'''''''
Samples
'''''''
========  =====================================  ==========  ==========
  Number  Explanation                            Input       Output
========  =====================================  ==========  ==========
       1  Check for a general case.              HelloWorld  HeLlOwOrLd
       2  Check for all "lowercase" characters.  helloworld  HeLlOwOrLd
       3  Check for all "UPPERCASE" characters.  HELLOWORLD  HeLlOwOrLd
========  =====================================  ==========  ==========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


------------------------------------------------------------------------
asg_a0937 : String - Add two binary numbers which are stored as strings.
------------------------------------------------------------------------


'''''''''''
Description
'''''''''''




'''''''
Samples
'''''''
========  =====================================  ==========  ==========
  Number  Explanation                            Input       Output
========  =====================================  ==========  ==========
       1  Check for a general case.              HelloWorld  HeLlOwOrLd
       2  Check for all "lowercase" characters.  helloworld  HeLlOwOrLd
       3  Check for all "UPPERCASE" characters.  HELLOWORLD  HeLlOwOrLd
========  =====================================  ==========  ==========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


-------------------------------------------------
asg_a2204 : String - Find the length of a string.
-------------------------------------------------


'''''''''''
Description
'''''''''''

Define a function ``mylen()`` that computes the length of a given of string.


'''''
Notes
'''''


^^^^^^
Note 1
^^^^^^

Do not use ``strlen()`` function.


'''''''
Samples
'''''''
========  ========================  ===========  ========
  Number  Explanation               Input          Output
========  ========================  ===========  ========
       1  Check for a string        hello world        11
       2  Check for a blank string                      0
========  ========================  ===========  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``int mylen(char *string)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ======================  =========
  Number  Type    Name    Explanation             Remarks
========  ======  ======  ======================  =========
       1  char *  string  Pointer to the string.
========  ======  ======  ======================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =====================  =========
  Number  Type    Name    Explanation            Remarks
========  ======  ======  =====================  =========
       1  int     NA      Length of the string.
========  ======  ======  =====================  =========


----------------------------------------------
asg_a2205 : String - Check character for vowel
----------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``is_vowel(char c)`` a string (of length 1) and returns True if it is a vowel, False otherwise.


'''''
Notes
'''''


^^^^^^
Note 1
^^^^^^

The function should not work for strings with lengths greater than 1.


'''''''
Samples
'''''''
========  ============================  =======  ========
  Number  Explanation                   Input    Output
========  ============================  =======  ========
       1  Check for a vowel             a        True
       2  Check for a vowel             e        True
       3  Check for a vowel             i        True
       4  Check for a upper case vowel  A        True
       5  Check for a vowel             o        True
========  ============================  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``int is_vowel(char *string)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  =========================  =========
  Number  Type    Name    Explanation                Remarks
========  ======  ======  =========================  =========
       1  char *  string  String to be worked upon.
========  ======  ======  =========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =========================================================================================  =========
  Number  Type    Name    Explanation                                                                                Remarks
========  ======  ======  =========================================================================================  =========
       1  int     NA      0 if the string if of single character and that character is a vowel else return non-zero
========  ======  ======  =========================================================================================  =========


--------------------------------------
asg_a2208 : String - Reverse a string.
--------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``myreverse()`` which will reverse a string passed to it.


'''''
Notes
'''''


^^^^^^
Note 1
^^^^^^

Do not use the ``strlen()`` function.


'''''''
Samples
'''''''
========  ================================================  =============  =============
  Number  Explanation                                       Input          Output
========  ================================================  =============  =============
       1  Reverse a string with odd number of characters.   radar          radar
       2  Reverse a string with even number of characters.  hello, world!  !dlrow ,olleh
       3  Reverse a blank string.
========  ================================================  =============  =============


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``char * myreverse(char *string)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ======================  =========
  Number  Type    Name    Explanation             Remarks
========  ======  ======  ======================  =========
       1  char *  string  String to be reversed.
========  ======  ======  ======================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =================================================================  =========
  Number  Type    Name    Explanation                                                        Remarks
========  ======  ======  =================================================================  =========
       1  char *  NA      Return the address of the passed string with reversed characters.
========  ======  ======  =================================================================  =========


---------------------------------------------------
asg_a2209 : String - Check a string for palindrome.
---------------------------------------------------


'''''''''''
Description
'''''''''''

Define a function ``is_palindrome()`` that recognizes palindromes (i.e.  words that look the same written backwards). For example, ``is_palindrome("radar")`` should return ``Success``. In case of blank strings it should return ``Success``


'''''
Notes
'''''


^^^^^^
Note 1
^^^^^^

Do not use inbuilt functions for string reversal and comparisons.


'''''''
Samples
'''''''
========  ==========================================  ===========  ========
  Number  Explanation                                 Input        Output
========  ==========================================  ===========  ========
       1  Check for a palindrome string odd numbered  "radar"      True
       2  Check for a non-palindrome string.          Hello World  False
       3  Check for a blank string.                                False
       4  Check for a even length string.             HEYYEH       True
========  ==========================================  ===========  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``int is_palindrome(char *string)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  =======================================  =========
  Number  Type    Name    Explanation                              Remarks
========  ======  ======  =======================================  =========
       1  char *  string  The string to be tested for palindrome.
========  ======  ======  =======================================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =================================================  =========
  Number  Type    Name    Explanation                                        Remarks
========  ======  ======  =================================================  =========
       1  int     NA      Zero if the string is a palindrome, 1 other wise.
========  ======  ======  =================================================  =========


-------------------------------------------------
asg_a2212 : String - Generate n times a character
-------------------------------------------------


'''''''''''
Description
'''''''''''

Define a function ``generate_n_chars()`` that takes an integer n and a character c and returns a string, n characters long, consisting only of c:s. For example, generate_n_chars(5, "x") should return the string "xxxxx".


'''''''
Samples
'''''''
========  =========================  ========  ========
  Number  Explanation                Input     Output
========  =========================  ========  ========
       1  Check for a general case.  [5, 'a']  aaaaa
========  =========================  ========  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``int mymax(int n, char c, char *string)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  =============================================  =========
  Number  Type    Name    Explanation                                    Remarks
========  ======  ======  =============================================  =========
       1  int     n       Number of times character should be repeated.
       2  char    c       The character to be repeated.
========  ======  ======  =============================================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  ===========================  =========
  Number  Type    Name    Explanation                  Remarks
========  ======  ======  ===========================  =========
       1  int     NA      Was the function successful
========  ======  ======  ===========================  =========


---------------------------------------------
asg_a2218 : String - Check palindrome phrases
---------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``check_phrase_palindrome()`` of a palindrome recognizer that also accepts phrase palindromes such as "Go hang a salami Im a lasagna hog.", "Was it a rat I saw?", "Step on no pets", "Sit on a potato pan, Otis", "Lisa Bonet ate no basil", "Satan, oscillate my metallic sonatas", "I roamed under it as a tired nude Maori", "Rise to vote sir", or the exclamation "Dammit, Im mad!". Note that punctuation, capitalization, and spacing are being ignored. 


'''''''
Samples
'''''''
========  =============  ================  ========
  Number  Explanation    Input             Output
========  =============  ================  ========
       1                 Rise to vote Sir  True
========  =============  ================  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


----------------------------------
asg_a2219 : String - Check pangram
----------------------------------


'''''''''''
Description
'''''''''''

Write a function ``check_pangram()``. A pangram is a sentence that contains all the letters of the English alphabet at least once, for exmaple: The quick brown fox jumps over the lazy dog. Your task here is to write a function to check a sentence for pangram or not.


'''''''
Samples
'''''''
========  =============  ==============================================  ========
  Number  Explanation    Input                                           Output
========  =============  ==============================================  ========
       1                 The quick brown fox jumps over the 14 lazy dog  True
========  =============  ==============================================  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


------------------------------------------
asg_a2223 : String DISPUTE - Caesar Cipher
------------------------------------------


'''''''''''
Description
'''''''''''

In cryptography, a Caesar cipher is a very simple encryption techniques in which each letter in the plain text is replaced by a letter some fixed number of positions down the alphabet.
For example, with a shift of 3, A would be replaced by D, B would become E, and so on. The method is named after Julius Caesar, who used it to communicate with his generals.
ROT-13 ("rotate by 13 places") is a widely used example of a Caesar cipher where the shift is 13.
Write a function ``myceaser_encode()`` which takes a string and the number of shift and encode the string.
Note that the special characters SHOULD not be shifted.
In another assignment Write another function ``myceaser_decode()`` which takes an encrypted message and the shift number and decrypts the string.


'''''''
Samples
'''''''
========  ===========================  =======  ========
  Number  Explanation                  Input    Output
========  ===========================  =======  ========
       1  Check if function is proper  Tnevzn   Garima
========  ===========================  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``char * myceaser_encode(char * string, int shift)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ==============================================================  =========
  Number  Type    Name    Explanation                                                     Remarks
========  ======  ======  ==============================================================  =========
       1  str     string  The string to be encrypted.
       2  int     shift   The number of characters to be shifted to encrypt the message.
========  ======  ======  ==============================================================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =====================  =========
  Number  Type    Name    Explanation            Remarks
========  ======  ======  =====================  =========
       1  str     NA      The encrypted string.
========  ======  ======  =====================  =========


-----------------------------------------------------------------
asg_a2236 : String - Print the frequency of characters in a file.
-----------------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``char_freq_table()`` that takes a file name and returns a list of characters the file has along with the count.


'''''''
Samples
'''''''
========  ===========================  ==========================================================================================  ==========================================
  Number  Explanation                  Input                                                                                       Output
========  ===========================  ==========================================================================================  ==========================================
       1  Check if function is proper  /home/garima/pinnacle/leaders-pinnacle/tool/data/assignments/data_files/asg_a2236_freq.txt  [{'L': 2, '!': 1, 'H': 1, 'O': 1, 'E': 1}]
========  ===========================  ==========================================================================================  ==========================================


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``char * toggle_case(str string)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================================  =========
  Number  Type    Name    Explanation                               Remarks
========  ======  ======  ========================================  =========
       1  char *  string  The string whose case has to be toggled.
========  ======  ======  ========================================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =================================  =========
  Number  Type    Name    Explanation                        Remarks
========  ======  ======  =================================  =========
       1  char *  NA      The string with the case toggled.
========  ======  ======  =================================  =========


----------------------------------------------------
asg_a2238 : String - Find words with occurences as 1
----------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``extract_single_occurences`` that given the file name of a text will return all the words which occur only one time. Make sure your program ignores capitalization. 


'''''''
Samples
'''''''
========  ===========================  ===========================================================================================  ========================
  Number  Explanation                  Input                                                                                        Output
========  ===========================  ===========================================================================================  ========================
       1  Check if function is proper  /home/garima/pinnacle/leaders-pinnacle/tool/data/assignments/data_files/asg_a2238_hapax.txt  ['is', 'matter', 'hell']
========  ===========================  ===========================================================================================  ========================


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``int mymax(int num1, int num2)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ==================  =========
  Number  Type    Name    Explanation         Remarks
========  ======  ======  ==================  =========
       1  int     num1    The first number.
       2  int     num2    The second number.
========  ======  ======  ==================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  ==================  =========
  Number  Type    Name    Explanation         Remarks
========  ======  ======  ==================  =========
       1  int     NA      The larger number.
========  ======  ======  ==================  =========


---------------------------------
asg_a2242 : Trivia - Anagram game
---------------------------------


'''''''''''
Description
'''''''''''




'''''''
Samples
'''''''
========  =============  =======  ========
  Number  Explanation    Input    Output
========  =============  =======  ========
       1                          #
========  =============  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


---------------------------------------------------
asg_a2254 : String - Change the case of a sentance.
---------------------------------------------------


'''''''''''
Description
'''''''''''


Write a function ``alter_case_1("Hello World")`` which converts the case of the characters. The
first character should be capital. Special charecters are skipped and the next alphabet should
be changed according to the previous character.'



'''''''
Samples
'''''''
========  ========================================================  ==================  ==================
  Number  Explanation                                               Input               Output
========  ========================================================  ==================  ==================
       1  See if the function works correctly.                      HelloWorld          HeLlOwOrLd
       2  See if it works correctly on all "lowercase" characters.  helloworld          HeLlOwOrLd
       3  See if it works correctly on all "UPPERCASE" characters.  HELLOWORLD          HeLlOwOrLd
       4  See if it works correctly on special characters.          Hello!Wo#rl%  5 4d  HeLlO!Wo#Rl%  5 4D
========  ========================================================  ==================  ==================


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``alter_case(char *input, int )``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ========  ======  =======================  =========
  Number  Type      Name    Explanation              Remarks
========  ========  ======  =======================  =========
       1  C String  input   String to be worked upn
       2  C String  input   String to be worked upn
       3  C String  input   String to be worked upn
========  ========  ======  =======================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  =============  ======  ==============================  =========
  Number  Type           Name    Explanation                     Remarks
========  =============  ======  ==============================  =========
       1  string object  NA      String with the case converted
========  =============  ======  ==============================  =========


**********
2 D Arrays
**********


---------------------------------------------------
asg_a0001 : String - Change the case of a sentance.
---------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``alter_case_1("Hello World")`` which converts the case of the characters. The first character should be capital.
Special charcters are counted as a character but no operation is performed on them.


'''''''
Samples
'''''''
========  =====================================  ==========  ==========
  Number  Explanation                            Input       Output
========  =====================================  ==========  ==========
       1  Check for a general case.              HelloWorld  HeLlOwOrLd
       2  Check for all "lowercase" characters.  helloworld  HeLlOwOrLd
       3  Check for all "UPPERCASE" characters.  HELLOWORLD  HeLlOwOrLd
========  =====================================  ==========  ==========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


----------------------------------------------------------------------------------
asg_a0003 : String - Program to have alternate case in a string, like "hElLoWoRlD"
----------------------------------------------------------------------------------


'''''''''''
Description
'''''''''''


Write a function ``alter_case_2("Hello World")`` which converts the case of
the characters. The first character should be small.'



'''''
Notes
'''''


^^^^^^
Note 1
^^^^^^

This is a general note.


'''''''
Samples
'''''''
========  ======================================================  ==================  ==================
  Number  Explanation                                             Input               Output
========  ======================================================  ==================  ==================
       1  See if the function works correctly.                    HelloWorld          hELLOwORLD
       2  See if it works correctly on all lowercase characters.  helloworld          hELLOWORLD
       3  See if it works correctly on all Uppercase chars        HELLOWORLD          helloworld
       4  See if it works correctly on blank strings.
       5  See if it works correctly on special characters.        Hello!Wo#rl%  5 4d  hELLO!wO#RL%  5 4D
========  ======================================================  ==================  ==================


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_2(char *input, char *retval)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ========  ======  ===============================  =========
  Number  Type      Name    Explanation                      Remarks
========  ========  ======  ===============================  =========
       1  C String  input   String to be worked upn
       2  C String  retval  String with the case converted.
========  ========  ======  ===============================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


---------------------------------------------------------------
asg_a0004 : String - Find the lowercase characters in a string.
---------------------------------------------------------------


'''''''''''
Description
'''''''''''


Write a function ``find_lowercase("HelloWorld")`` which returns a string
with lowercase characters present in the string.



'''''
Notes
'''''


^^^^^^
Note 1
^^^^^^

This is a general note.


'''''''
Samples
'''''''
========  ===================================================  ===================  ==========
  Number  Explanation                                          Input                Output
========  ===================================================  ===================  ==========
       1  Check if the function works                          Hello World          elloorld
       2  Check if it works if all the characters are capital  HELLOWORLD
       3  Check if it works for all the characters small       helloworld           helloworld
       4  Check if special chars are removed                   Hell o ! @#$% world  elloworld
========  ===================================================  ===================  ==========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void find_lowercase(char *input, char *retval)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ========  ======  =====================================  =========
  Number  Type      Name    Explanation                            Remarks
========  ========  ======  =====================================  =========
       1  C String  input   String to be worked upon.
       2  C String  retval  String with the lowercase characters.
========  ========  ======  =====================================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


----------------------------------------------------------------
asg_a0007 : String - Find the upper case characters in a string.
----------------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``find_uppercase("Hello")`` which returns a string with all the upper case characters in the string passed.


'''''
Notes
'''''


^^^^^^
Note 1
^^^^^^

This is sample note


'''''''
Samples
'''''''
========  =======================================================================  ================  ==========
  Number  Explanation                                                              Input             Output
========  =======================================================================  ================  ==========
       1  Check if the function works.                                             Hello             H
       2  Check if the function works if string has all the upper case charaters.  HELLO WORLD       HELLOWORLD
       3  Check if the function works if string has all the lower case characters  hello world
       4  Check if the function works if string has some special characters.       Hello !@#$ World  HW
========  =======================================================================  ================  ==========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case(char *input, char *retval)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ========  ======  ===============================  =========
  Number  Type      Name    Explanation                      Remarks
========  ========  ======  ===============================  =========
       1  C String  input   String to be worked upn
       2  C String  retval  String with the case converted.
========  ========  ======  ===============================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


----------------------------------------------------------------------
asg_a0013 : String - Toggle the case of all the charcters in a string.
----------------------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``toggle_case()`` which takes input a string and toggles the case of all the characters in the string.


'''''
Notes
'''''


^^^^^^
Note 1
^^^^^^

Do not use the inbuilt functions in the language.


'''''''
Samples
'''''''
========  =================================================  ===============  ===============
  Number  Explanation                                        Input            Output
========  =================================================  ===============  ===============
       1  Check for basic functionality.                     HelloWorld       hELLOwORLD
       2  Check for functionality with spaces.               Hello World      hELLO wORLD
       3  Check for functionality with special characters.   Hello @#$ World  hELLO @#$ wORLD
       4  Check for functionality with blank string.
       5  Check for functionality with alphanumeric string.  He12Wo           hE12wO
========  =================================================  ===============  ===============


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``char * toggle_case(str string)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================================  =========
  Number  Type    Name    Explanation                               Remarks
========  ======  ======  ========================================  =========
       1  char *  string  The string whose case has to be toggled.
========  ======  ======  ========================================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =================================  =========
  Number  Type    Name    Explanation                        Remarks
========  ======  ======  =================================  =========
       1  char *  NA      The string with the case toggled.
========  ======  ======  =================================  =========


------------------------------------------------------------------
asg_a0016 : String - Function to check if character is a consonant
------------------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``is_consonant()`` that takes a character (string of length 1) and checks if the character is a consonant or not.


'''''
Notes
'''''


^^^^^^
Note 1
^^^^^^

Do not use the inbuilt functions in the language.


'''''''
Samples
'''''''
========  =================================================  =======  ========
  Number  Explanation                                        Input    Output
========  =================================================  =======  ========
       1  Check if function is working.                      A        False
       2  Check if function is working.                      B        True
       3  Check if function is working for numeric.          2        False
       4  Check if function is working for special symbols.  #        False
       5  Check if function is working for blank input.               False
========  =================================================  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``int is_consonant(char character)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  =========  ====================  =========
  Number  Type    Name       Explanation           Remarks
========  ======  =========  ====================  =========
       1  char    character  The input character.
========  ======  =========  ====================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =====================================================================  =========
  Number  Type    Name    Explanation                                                            Remarks
========  ======  ======  =====================================================================  =========
       1  int     NA      ``0`` if the character is consonant else return a ``Non-Zero`` value.
========  ======  ======  =====================================================================  =========


-----------------------------------------------------------
asg_a0154 : String - Design a algorithm to rotate a string.
-----------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``rotate_string_left()`` which takes input the number of characters to rotate and rotates the passed string.


'''''
Notes
'''''


^^^^^^
Note 1
^^^^^^

Do not use the inbuilt functions in the language.


'''''''
Samples
'''''''
========  =============  ==================  ===========
  Number  Explanation    Input               Output
========  =============  ==================  ===========
       1                 ["Hello World", 3]  lo WorldHel
========  =============  ==================  ===========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``char *rotate_string_left (char * string, int n)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ======================================================  =========
  Number  Type    Name    Explanation                                             Remarks
========  ======  ======  ======================================================  =========
       1  char *  string  The string to be worked upon.
       2  int     n       The number of characters you should rotate the string.
========  ======  ======  ======================================================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  ===================  =========
  Number  Type    Name    Explanation          Remarks
========  ======  ======  ===================  =========
       1  char *  NA      The rotated string.
========  ======  ======  ===================  =========


-------------------------------------------------------------------
asg_a0669 : String - write a function to convert the epoch to date.
-------------------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function convert_epoch_to_date(


'''''''
Samples
'''''''
========  ===============================  =======  ========
  Number  Explanation                      Input      Output
========  ===============================  =======  ========
       1  Check if the function is proper  [3]             5
       2  Check if the function is proper  [12]            0
========  ===============================  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``int my_floor(float number)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ===================================  =========
  Number  Type    Name    Explanation                          Remarks
========  ======  ======  ===================================  =========
       3  int     number  Number whose floow has to be found.
========  ======  ======  ===================================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  ==============================================  =========
  Number  Type    Name    Explanation                                     Remarks
========  ======  ======  ==============================================  =========
       1  int     NA      Number which is the floor of the passed float.
========  ======  ======  ==============================================  =========


----------------------------------------------------------------------------------------
asg_a0753 : String - Insert the word "Hello" in the middle. of the words in an sentence.
----------------------------------------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``insert_hello(str sentence)`` which inserts the word ``Hello`` in between of each word present in the passed ``Sentence``. (Eg. How are You? to How Hello are Hello You hello?)


'''''
Notes
'''''


^^^^^^
Note 1
^^^^^^

Do not use the inbuilt functions in the language.


'''''''
Samples
'''''''
========  =============  =======  ========
Number    Explanation    Input    Output
========  =============  =======  ========
========  =============  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``char * insert_hello(char * sentence)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ========  ===================  =========
  Number  Type    Name      Explanation          Remarks
========  ======  ========  ===================  =========
       1  char *  sentence  The input sentence.
========  ======  ========  ===================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  NA      The resulting String is.
========  ======  ======  ========================  =========


-----------------------------------------------------------------------------
asg_a0873 : String - Write a function to remove all the spaces from a string.
-----------------------------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``trim_string(String str)`` to remove all the spaces from a string. All spaces include leading spaces, trailing spaces and the spaces in between the words.


'''''
Notes
'''''


^^^^^^
Note 1
^^^^^^

Do not use the inbuilt functions in the language.


'''''''
Samples
'''''''
========  =====================================  =========================  ====================
  Number  Explanation                            Input                      Output
========  =====================================  =========================  ====================
       1  Check if it works in the simple case.  Hello World! How are you.  HelloWordl!Howareyou
========  =====================================  =========================  ====================


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``char * toggle_case(char *string)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ==========================================  =========
  Number  Type    Name    Explanation                                 Remarks
========  ======  ======  ==========================================  =========
       1  char *  string  The string whose spaces has to be removed.
========  ======  ======  ==========================================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  ====================================  =========
  Number  Type    Name    Explanation                           Remarks
========  ======  ======  ====================================  =========
       1  char *  NA      The string with the spaces removed..
========  ======  ======  ====================================  =========


-----------------------------------------
asg_a0935 : String - Add two Hex Strings.
-----------------------------------------


'''''''''''
Description
'''''''''''




'''''''
Samples
'''''''
========  =====================================  ==========  ==========
  Number  Explanation                            Input       Output
========  =====================================  ==========  ==========
       1  Check for a general case.              HelloWorld  HeLlOwOrLd
       2  Check for all "lowercase" characters.  helloworld  HeLlOwOrLd
       3  Check for all "UPPERCASE" characters.  HELLOWORLD  HeLlOwOrLd
========  =====================================  ==========  ==========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


-------------------------------------------
asg_a0936 : String - Add two Octal Strings.
-------------------------------------------


'''''''''''
Description
'''''''''''




'''''''
Samples
'''''''
========  =====================================  ==========  ==========
  Number  Explanation                            Input       Output
========  =====================================  ==========  ==========
       1  Check for a general case.              HelloWorld  HeLlOwOrLd
       2  Check for all "lowercase" characters.  helloworld  HeLlOwOrLd
       3  Check for all "UPPERCASE" characters.  HELLOWORLD  HeLlOwOrLd
========  =====================================  ==========  ==========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


------------------------------------------------------------------------
asg_a0937 : String - Add two binary numbers which are stored as strings.
------------------------------------------------------------------------


'''''''''''
Description
'''''''''''




'''''''
Samples
'''''''
========  =====================================  ==========  ==========
  Number  Explanation                            Input       Output
========  =====================================  ==========  ==========
       1  Check for a general case.              HelloWorld  HeLlOwOrLd
       2  Check for all "lowercase" characters.  helloworld  HeLlOwOrLd
       3  Check for all "UPPERCASE" characters.  HELLOWORLD  HeLlOwOrLd
========  =====================================  ==========  ==========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


-------------------------------------------------
asg_a2204 : String - Find the length of a string.
-------------------------------------------------


'''''''''''
Description
'''''''''''

Define a function ``mylen()`` that computes the length of a given of string.


'''''
Notes
'''''


^^^^^^
Note 1
^^^^^^

Do not use ``strlen()`` function.


'''''''
Samples
'''''''
========  ========================  ===========  ========
  Number  Explanation               Input          Output
========  ========================  ===========  ========
       1  Check for a string        hello world        11
       2  Check for a blank string                      0
========  ========================  ===========  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``int mylen(char *string)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ======================  =========
  Number  Type    Name    Explanation             Remarks
========  ======  ======  ======================  =========
       1  char *  string  Pointer to the string.
========  ======  ======  ======================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =====================  =========
  Number  Type    Name    Explanation            Remarks
========  ======  ======  =====================  =========
       1  int     NA      Length of the string.
========  ======  ======  =====================  =========


----------------------------------------------
asg_a2205 : String - Check character for vowel
----------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``is_vowel(char c)`` a string (of length 1) and returns True if it is a vowel, False otherwise.


'''''
Notes
'''''


^^^^^^
Note 1
^^^^^^

The function should not work for strings with lengths greater than 1.


'''''''
Samples
'''''''
========  ============================  =======  ========
  Number  Explanation                   Input    Output
========  ============================  =======  ========
       1  Check for a vowel             a        True
       2  Check for a vowel             e        True
       3  Check for a vowel             i        True
       4  Check for a upper case vowel  A        True
       5  Check for a vowel             o        True
========  ============================  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``int is_vowel(char *string)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  =========================  =========
  Number  Type    Name    Explanation                Remarks
========  ======  ======  =========================  =========
       1  char *  string  String to be worked upon.
========  ======  ======  =========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =========================================================================================  =========
  Number  Type    Name    Explanation                                                                                Remarks
========  ======  ======  =========================================================================================  =========
       1  int     NA      0 if the string if of single character and that character is a vowel else return non-zero
========  ======  ======  =========================================================================================  =========


--------------------------------------
asg_a2208 : String - Reverse a string.
--------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``myreverse()`` which will reverse a string passed to it.


'''''
Notes
'''''


^^^^^^
Note 1
^^^^^^

Do not use the ``strlen()`` function.


'''''''
Samples
'''''''
========  ================================================  =============  =============
  Number  Explanation                                       Input          Output
========  ================================================  =============  =============
       1  Reverse a string with odd number of characters.   radar          radar
       2  Reverse a string with even number of characters.  hello, world!  !dlrow ,olleh
       3  Reverse a blank string.
========  ================================================  =============  =============


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``char * myreverse(char *string)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ======================  =========
  Number  Type    Name    Explanation             Remarks
========  ======  ======  ======================  =========
       1  char *  string  String to be reversed.
========  ======  ======  ======================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =================================================================  =========
  Number  Type    Name    Explanation                                                        Remarks
========  ======  ======  =================================================================  =========
       1  char *  NA      Return the address of the passed string with reversed characters.
========  ======  ======  =================================================================  =========


---------------------------------------------------
asg_a2209 : String - Check a string for palindrome.
---------------------------------------------------


'''''''''''
Description
'''''''''''

Define a function ``is_palindrome()`` that recognizes palindromes (i.e.  words that look the same written backwards). For example, ``is_palindrome("radar")`` should return ``Success``. In case of blank strings it should return ``Success``


'''''
Notes
'''''


^^^^^^
Note 1
^^^^^^

Do not use inbuilt functions for string reversal and comparisons.


'''''''
Samples
'''''''
========  ==========================================  ===========  ========
  Number  Explanation                                 Input        Output
========  ==========================================  ===========  ========
       1  Check for a palindrome string odd numbered  "radar"      True
       2  Check for a non-palindrome string.          Hello World  False
       3  Check for a blank string.                                False
       4  Check for a even length string.             HEYYEH       True
========  ==========================================  ===========  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``int is_palindrome(char *string)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  =======================================  =========
  Number  Type    Name    Explanation                              Remarks
========  ======  ======  =======================================  =========
       1  char *  string  The string to be tested for palindrome.
========  ======  ======  =======================================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =================================================  =========
  Number  Type    Name    Explanation                                        Remarks
========  ======  ======  =================================================  =========
       1  int     NA      Zero if the string is a palindrome, 1 other wise.
========  ======  ======  =================================================  =========


--------------------------------------------------
asg_a2210 : String - Check for value in given list
--------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``is_member()`` that takes a value (i.e. a number, string, etc) x and a list of values a, and returns True if x is a member of a, False otherwise. (Note that this is exactly what the in operator does, but for the sake of the exercise you should pretend Python did not have this operator.) 


'''''''
Samples
'''''''
========  ============================  =================  ========
  Number  Explanation                   Input              Output
========  ============================  =================  ========
       1  Check if function is correst  [2, [1, 2, 3, 4]]  True
========  ============================  =================  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``boolean is_member([ANY] value, [list of ANY] mylist)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ===========  ======  ===========================================================  =========
  Number  Type         Name    Explanation                                                  Remarks
========  ===========  ======  ===========================================================  =========
       1  list of ANY  mylist  List of elements. The list can have data of multiple types.
========  ===========  ======  ===========================================================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  =======  ======  ==============================================  =========
  Number  Type     Name    Explanation                                     Remarks
========  =======  ======  ==============================================  =========
       1  boolean  NA      ``True`` or ``False`` depending on the result.
========  =======  ======  ==============================================  =========


-------------------------------------------------
asg_a2212 : String - Generate n times a character
-------------------------------------------------


'''''''''''
Description
'''''''''''

Define a function ``generate_n_chars()`` that takes an integer n and a character c and returns a string, n characters long, consisting only of c:s. For example, generate_n_chars(5, "x") should return the string "xxxxx".


'''''''
Samples
'''''''
========  =========================  ========  ========
  Number  Explanation                Input     Output
========  =========================  ========  ========
       1  Check for a general case.  [5, 'a']  aaaaa
========  =========================  ========  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``int mymax(int n, char c, char *string)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  =============================================  =========
  Number  Type    Name    Explanation                                    Remarks
========  ======  ======  =============================================  =========
       1  int     n       Number of times character should be repeated.
       2  char    c       The character to be repeated.
========  ======  ======  =============================================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  ===========================  =========
  Number  Type    Name    Explanation                  Remarks
========  ======  ======  ===========================  =========
       1  int     NA      Was the function successful
========  ======  ======  ===========================  =========


---------------------------------------------
asg_a2218 : String - Check palindrome phrases
---------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``check_phrase_palindrome()`` of a palindrome recognizer that also accepts phrase palindromes such as "Go hang a salami Im a lasagna hog.", "Was it a rat I saw?", "Step on no pets", "Sit on a potato pan, Otis", "Lisa Bonet ate no basil", "Satan, oscillate my metallic sonatas", "I roamed under it as a tired nude Maori", "Rise to vote sir", or the exclamation "Dammit, Im mad!". Note that punctuation, capitalization, and spacing are being ignored. 


'''''''
Samples
'''''''
========  =============  ================  ========
  Number  Explanation    Input             Output
========  =============  ================  ========
       1                 Rise to vote Sir  True
========  =============  ================  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


----------------------------------
asg_a2219 : String - Check pangram
----------------------------------


'''''''''''
Description
'''''''''''

Write a function ``check_pangram()``. A pangram is a sentence that contains all the letters of the English alphabet at least once, for exmaple: The quick brown fox jumps over the lazy dog. Your task here is to write a function to check a sentence for pangram or not.


'''''''
Samples
'''''''
========  =============  ==============================================  ========
  Number  Explanation    Input                                           Output
========  =============  ==============================================  ========
       1                 The quick brown fox jumps over the 14 lazy dog  True
========  =============  ==============================================  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


------------------------------------------
asg_a2223 : String DISPUTE - Caesar Cipher
------------------------------------------


'''''''''''
Description
'''''''''''

In cryptography, a Caesar cipher is a very simple encryption techniques in which each letter in the plain text is replaced by a letter some fixed number of positions down the alphabet.
For example, with a shift of 3, A would be replaced by D, B would become E, and so on. The method is named after Julius Caesar, who used it to communicate with his generals.
ROT-13 ("rotate by 13 places") is a widely used example of a Caesar cipher where the shift is 13.
Write a function ``myceaser_encode()`` which takes a string and the number of shift and encode the string.
Note that the special characters SHOULD not be shifted.
In another assignment Write another function ``myceaser_decode()`` which takes an encrypted message and the shift number and decrypts the string.


'''''''
Samples
'''''''
========  ===========================  =======  ========
  Number  Explanation                  Input    Output
========  ===========================  =======  ========
       1  Check if function is proper  Tnevzn   Garima
========  ===========================  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``char * myceaser_encode(char * string, int shift)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ==============================================================  =========
  Number  Type    Name    Explanation                                                     Remarks
========  ======  ======  ==============================================================  =========
       1  str     string  The string to be encrypted.
       2  int     shift   The number of characters to be shifted to encrypt the message.
========  ======  ======  ==============================================================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =====================  =========
  Number  Type    Name    Explanation            Remarks
========  ======  ======  =====================  =========
       1  str     NA      The encrypted string.
========  ======  ======  =====================  =========


-----------------------------------------------------------------
asg_a2236 : String - Print the frequency of characters in a file.
-----------------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``char_freq_table()`` that takes a file name and returns a list of characters the file has along with the count.


'''''''
Samples
'''''''
========  ===========================  ==========================================================================================  ==========================================
  Number  Explanation                  Input                                                                                       Output
========  ===========================  ==========================================================================================  ==========================================
       1  Check if function is proper  /home/garima/pinnacle/leaders-pinnacle/tool/data/assignments/data_files/asg_a2236_freq.txt  [{'L': 2, '!': 1, 'H': 1, 'O': 1, 'E': 1}]
========  ===========================  ==========================================================================================  ==========================================


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``char * toggle_case(str string)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================================  =========
  Number  Type    Name    Explanation                               Remarks
========  ======  ======  ========================================  =========
       1  char *  string  The string whose case has to be toggled.
========  ======  ======  ========================================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =================================  =========
  Number  Type    Name    Explanation                        Remarks
========  ======  ======  =================================  =========
       1  char *  NA      The string with the case toggled.
========  ======  ======  =================================  =========


----------------------------------------------------
asg_a2238 : String - Find words with occurences as 1
----------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``extract_single_occurences`` that given the file name of a text will return all the words which occur only one time. Make sure your program ignores capitalization. 


'''''''
Samples
'''''''
========  ===========================  ===========================================================================================  ========================
  Number  Explanation                  Input                                                                                        Output
========  ===========================  ===========================================================================================  ========================
       1  Check if function is proper  /home/garima/pinnacle/leaders-pinnacle/tool/data/assignments/data_files/asg_a2238_hapax.txt  ['is', 'matter', 'hell']
========  ===========================  ===========================================================================================  ========================


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``int mymax(int num1, int num2)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ==================  =========
  Number  Type    Name    Explanation         Remarks
========  ======  ======  ==================  =========
       1  int     num1    The first number.
       2  int     num2    The second number.
========  ======  ======  ==================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  ==================  =========
  Number  Type    Name    Explanation         Remarks
========  ======  ======  ==================  =========
       1  int     NA      The larger number.
========  ======  ======  ==================  =========


---------------------------------
asg_a2242 : Trivia - Anagram game
---------------------------------


'''''''''''
Description
'''''''''''




'''''''
Samples
'''''''
========  =============  =======  ========
  Number  Explanation    Input    Output
========  =============  =======  ========
       1                          #
========  =============  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


---------------------------------------------------
asg_a2254 : String - Change the case of a sentance.
---------------------------------------------------


'''''''''''
Description
'''''''''''


Write a function ``alter_case_1("Hello World")`` which converts the case of the characters. The
first character should be capital. Special charecters are skipped and the next alphabet should
be changed according to the previous character.'



'''''''
Samples
'''''''
========  ========================================================  ==================  ==================
  Number  Explanation                                               Input               Output
========  ========================================================  ==================  ==================
       1  See if the function works correctly.                      HelloWorld          HeLlOwOrLd
       2  See if it works correctly on all "lowercase" characters.  helloworld          HeLlOwOrLd
       3  See if it works correctly on all "UPPERCASE" characters.  HELLOWORLD          HeLlOwOrLd
       4  See if it works correctly on special characters.          Hello!Wo#rl%  5 4d  HeLlO!Wo#Rl%  5 4D
========  ========================================================  ==================  ==================


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``alter_case(char *input, int )``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ========  ======  =======================  =========
  Number  Type      Name    Explanation              Remarks
========  ========  ======  =======================  =========
       1  C String  input   String to be worked upn
       2  C String  input   String to be worked upn
       3  C String  input   String to be worked upn
========  ========  ======  =======================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  =============  ======  ==============================  =========
  Number  Type           Name    Explanation                     Remarks
========  =============  ======  ==============================  =========
       1  string object  NA      String with the case converted
========  =============  ======  ==============================  =========


*************
File Handling
*************


-------------------------------------------
con_a0415:C Programming - File Input Output
-------------------------------------------


'''''''''''
Description
'''''''''''








---------------------------------------------------
asg_a0001 : String - Change the case of a sentance.
---------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``alter_case_1("Hello World")`` which converts the case of the characters. The first character should be capital.
Special charcters are counted as a character but no operation is performed on them.


'''''''
Samples
'''''''
========  =====================================  ==========  ==========
  Number  Explanation                            Input       Output
========  =====================================  ==========  ==========
       1  Check for a general case.              HelloWorld  HeLlOwOrLd
       2  Check for all "lowercase" characters.  helloworld  HeLlOwOrLd
       3  Check for all "UPPERCASE" characters.  HELLOWORLD  HeLlOwOrLd
========  =====================================  ==========  ==========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


----------------------------------------------------------------------------------
asg_a0003 : String - Program to have alternate case in a string, like "hElLoWoRlD"
----------------------------------------------------------------------------------


'''''''''''
Description
'''''''''''


Write a function ``alter_case_2("Hello World")`` which converts the case of
the characters. The first character should be small.'



'''''
Notes
'''''


^^^^^^
Note 1
^^^^^^

This is a general note.


'''''''
Samples
'''''''
========  ======================================================  ==================  ==================
  Number  Explanation                                             Input               Output
========  ======================================================  ==================  ==================
       1  See if the function works correctly.                    HelloWorld          hELLOwORLD
       2  See if it works correctly on all lowercase characters.  helloworld          hELLOWORLD
       3  See if it works correctly on all Uppercase chars        HELLOWORLD          helloworld
       4  See if it works correctly on blank strings.
       5  See if it works correctly on special characters.        Hello!Wo#rl%  5 4d  hELLO!wO#RL%  5 4D
========  ======================================================  ==================  ==================


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_2(char *input, char *retval)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ========  ======  ===============================  =========
  Number  Type      Name    Explanation                      Remarks
========  ========  ======  ===============================  =========
       1  C String  input   String to be worked upn
       2  C String  retval  String with the case converted.
========  ========  ======  ===============================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


---------------------------------------------------------------
asg_a0004 : String - Find the lowercase characters in a string.
---------------------------------------------------------------


'''''''''''
Description
'''''''''''


Write a function ``find_lowercase("HelloWorld")`` which returns a string
with lowercase characters present in the string.



'''''
Notes
'''''


^^^^^^
Note 1
^^^^^^

This is a general note.


'''''''
Samples
'''''''
========  ===================================================  ===================  ==========
  Number  Explanation                                          Input                Output
========  ===================================================  ===================  ==========
       1  Check if the function works                          Hello World          elloorld
       2  Check if it works if all the characters are capital  HELLOWORLD
       3  Check if it works for all the characters small       helloworld           helloworld
       4  Check if special chars are removed                   Hell o ! @#$% world  elloworld
========  ===================================================  ===================  ==========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void find_lowercase(char *input, char *retval)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ========  ======  =====================================  =========
  Number  Type      Name    Explanation                            Remarks
========  ========  ======  =====================================  =========
       1  C String  input   String to be worked upon.
       2  C String  retval  String with the lowercase characters.
========  ========  ======  =====================================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


----------------------------------------------------------------
asg_a0007 : String - Find the upper case characters in a string.
----------------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``find_uppercase("Hello")`` which returns a string with all the upper case characters in the string passed.


'''''
Notes
'''''


^^^^^^
Note 1
^^^^^^

This is sample note


'''''''
Samples
'''''''
========  =======================================================================  ================  ==========
  Number  Explanation                                                              Input             Output
========  =======================================================================  ================  ==========
       1  Check if the function works.                                             Hello             H
       2  Check if the function works if string has all the upper case charaters.  HELLO WORLD       HELLOWORLD
       3  Check if the function works if string has all the lower case characters  hello world
       4  Check if the function works if string has some special characters.       Hello !@#$ World  HW
========  =======================================================================  ================  ==========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case(char *input, char *retval)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ========  ======  ===============================  =========
  Number  Type      Name    Explanation                      Remarks
========  ========  ======  ===============================  =========
       1  C String  input   String to be worked upn
       2  C String  retval  String with the case converted.
========  ========  ======  ===============================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


----------------------------------------------------------------------
asg_a0013 : String - Toggle the case of all the charcters in a string.
----------------------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``toggle_case()`` which takes input a string and toggles the case of all the characters in the string.


'''''
Notes
'''''


^^^^^^
Note 1
^^^^^^

Do not use the inbuilt functions in the language.


'''''''
Samples
'''''''
========  =================================================  ===============  ===============
  Number  Explanation                                        Input            Output
========  =================================================  ===============  ===============
       1  Check for basic functionality.                     HelloWorld       hELLOwORLD
       2  Check for functionality with spaces.               Hello World      hELLO wORLD
       3  Check for functionality with special characters.   Hello @#$ World  hELLO @#$ wORLD
       4  Check for functionality with blank string.
       5  Check for functionality with alphanumeric string.  He12Wo           hE12wO
========  =================================================  ===============  ===============


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``char * toggle_case(str string)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================================  =========
  Number  Type    Name    Explanation                               Remarks
========  ======  ======  ========================================  =========
       1  char *  string  The string whose case has to be toggled.
========  ======  ======  ========================================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =================================  =========
  Number  Type    Name    Explanation                        Remarks
========  ======  ======  =================================  =========
       1  char *  NA      The string with the case toggled.
========  ======  ======  =================================  =========


------------------------------------------------------------------
asg_a0016 : String - Function to check if character is a consonant
------------------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``is_consonant()`` that takes a character (string of length 1) and checks if the character is a consonant or not.


'''''
Notes
'''''


^^^^^^
Note 1
^^^^^^

Do not use the inbuilt functions in the language.


'''''''
Samples
'''''''
========  =================================================  =======  ========
  Number  Explanation                                        Input    Output
========  =================================================  =======  ========
       1  Check if function is working.                      A        False
       2  Check if function is working.                      B        True
       3  Check if function is working for numeric.          2        False
       4  Check if function is working for special symbols.  #        False
       5  Check if function is working for blank input.               False
========  =================================================  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``int is_consonant(char character)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  =========  ====================  =========
  Number  Type    Name       Explanation           Remarks
========  ======  =========  ====================  =========
       1  char    character  The input character.
========  ======  =========  ====================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =====================================================================  =========
  Number  Type    Name    Explanation                                                            Remarks
========  ======  ======  =====================================================================  =========
       1  int     NA      ``0`` if the character is consonant else return a ``Non-Zero`` value.
========  ======  ======  =====================================================================  =========


-----------------------------------------------------------
asg_a0154 : String - Design a algorithm to rotate a string.
-----------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``rotate_string_left()`` which takes input the number of characters to rotate and rotates the passed string.


'''''
Notes
'''''


^^^^^^
Note 1
^^^^^^

Do not use the inbuilt functions in the language.


'''''''
Samples
'''''''
========  =============  ==================  ===========
  Number  Explanation    Input               Output
========  =============  ==================  ===========
       1                 ["Hello World", 3]  lo WorldHel
========  =============  ==================  ===========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``char *rotate_string_left (char * string, int n)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ======================================================  =========
  Number  Type    Name    Explanation                                             Remarks
========  ======  ======  ======================================================  =========
       1  char *  string  The string to be worked upon.
       2  int     n       The number of characters you should rotate the string.
========  ======  ======  ======================================================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  ===================  =========
  Number  Type    Name    Explanation          Remarks
========  ======  ======  ===================  =========
       1  char *  NA      The rotated string.
========  ======  ======  ===================  =========


-------------------------------------------------------------------
asg_a0669 : String - write a function to convert the epoch to date.
-------------------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function convert_epoch_to_date(


'''''''
Samples
'''''''
========  ===============================  =======  ========
  Number  Explanation                      Input      Output
========  ===============================  =======  ========
       1  Check if the function is proper  [3]             5
       2  Check if the function is proper  [12]            0
========  ===============================  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``int my_floor(float number)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ===================================  =========
  Number  Type    Name    Explanation                          Remarks
========  ======  ======  ===================================  =========
       3  int     number  Number whose floow has to be found.
========  ======  ======  ===================================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  ==============================================  =========
  Number  Type    Name    Explanation                                     Remarks
========  ======  ======  ==============================================  =========
       1  int     NA      Number which is the floor of the passed float.
========  ======  ======  ==============================================  =========


----------------------------------------------------------------------------------------
asg_a0753 : String - Insert the word "Hello" in the middle. of the words in an sentence.
----------------------------------------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``insert_hello(str sentence)`` which inserts the word ``Hello`` in between of each word present in the passed ``Sentence``. (Eg. How are You? to How Hello are Hello You hello?)


'''''
Notes
'''''


^^^^^^
Note 1
^^^^^^

Do not use the inbuilt functions in the language.


'''''''
Samples
'''''''
========  =============  =======  ========
Number    Explanation    Input    Output
========  =============  =======  ========
========  =============  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``char * insert_hello(char * sentence)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ========  ===================  =========
  Number  Type    Name      Explanation          Remarks
========  ======  ========  ===================  =========
       1  char *  sentence  The input sentence.
========  ======  ========  ===================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  NA      The resulting String is.
========  ======  ======  ========================  =========


-----------------------------------------------------------------------------
asg_a0873 : String - Write a function to remove all the spaces from a string.
-----------------------------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``trim_string(String str)`` to remove all the spaces from a string. All spaces include leading spaces, trailing spaces and the spaces in between the words.


'''''
Notes
'''''


^^^^^^
Note 1
^^^^^^

Do not use the inbuilt functions in the language.


'''''''
Samples
'''''''
========  =====================================  =========================  ====================
  Number  Explanation                            Input                      Output
========  =====================================  =========================  ====================
       1  Check if it works in the simple case.  Hello World! How are you.  HelloWordl!Howareyou
========  =====================================  =========================  ====================


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``char * toggle_case(char *string)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ==========================================  =========
  Number  Type    Name    Explanation                                 Remarks
========  ======  ======  ==========================================  =========
       1  char *  string  The string whose spaces has to be removed.
========  ======  ======  ==========================================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  ====================================  =========
  Number  Type    Name    Explanation                           Remarks
========  ======  ======  ====================================  =========
       1  char *  NA      The string with the spaces removed..
========  ======  ======  ====================================  =========


-----------------------------------------
asg_a0935 : String - Add two Hex Strings.
-----------------------------------------


'''''''''''
Description
'''''''''''




'''''''
Samples
'''''''
========  =====================================  ==========  ==========
  Number  Explanation                            Input       Output
========  =====================================  ==========  ==========
       1  Check for a general case.              HelloWorld  HeLlOwOrLd
       2  Check for all "lowercase" characters.  helloworld  HeLlOwOrLd
       3  Check for all "UPPERCASE" characters.  HELLOWORLD  HeLlOwOrLd
========  =====================================  ==========  ==========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


-------------------------------------------
asg_a0936 : String - Add two Octal Strings.
-------------------------------------------


'''''''''''
Description
'''''''''''




'''''''
Samples
'''''''
========  =====================================  ==========  ==========
  Number  Explanation                            Input       Output
========  =====================================  ==========  ==========
       1  Check for a general case.              HelloWorld  HeLlOwOrLd
       2  Check for all "lowercase" characters.  helloworld  HeLlOwOrLd
       3  Check for all "UPPERCASE" characters.  HELLOWORLD  HeLlOwOrLd
========  =====================================  ==========  ==========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


------------------------------------------------------------------------
asg_a0937 : String - Add two binary numbers which are stored as strings.
------------------------------------------------------------------------


'''''''''''
Description
'''''''''''




'''''''
Samples
'''''''
========  =====================================  ==========  ==========
  Number  Explanation                            Input       Output
========  =====================================  ==========  ==========
       1  Check for a general case.              HelloWorld  HeLlOwOrLd
       2  Check for all "lowercase" characters.  helloworld  HeLlOwOrLd
       3  Check for all "UPPERCASE" characters.  HELLOWORLD  HeLlOwOrLd
========  =====================================  ==========  ==========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


-------------------------------------------------
asg_a2204 : String - Find the length of a string.
-------------------------------------------------


'''''''''''
Description
'''''''''''

Define a function ``mylen()`` that computes the length of a given of string.


'''''
Notes
'''''


^^^^^^
Note 1
^^^^^^

Do not use ``strlen()`` function.


'''''''
Samples
'''''''
========  ========================  ===========  ========
  Number  Explanation               Input          Output
========  ========================  ===========  ========
       1  Check for a string        hello world        11
       2  Check for a blank string                      0
========  ========================  ===========  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``int mylen(char *string)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ======================  =========
  Number  Type    Name    Explanation             Remarks
========  ======  ======  ======================  =========
       1  char *  string  Pointer to the string.
========  ======  ======  ======================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =====================  =========
  Number  Type    Name    Explanation            Remarks
========  ======  ======  =====================  =========
       1  int     NA      Length of the string.
========  ======  ======  =====================  =========


----------------------------------------------
asg_a2205 : String - Check character for vowel
----------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``is_vowel(char c)`` a string (of length 1) and returns True if it is a vowel, False otherwise.


'''''
Notes
'''''


^^^^^^
Note 1
^^^^^^

The function should not work for strings with lengths greater than 1.


'''''''
Samples
'''''''
========  ============================  =======  ========
  Number  Explanation                   Input    Output
========  ============================  =======  ========
       1  Check for a vowel             a        True
       2  Check for a vowel             e        True
       3  Check for a vowel             i        True
       4  Check for a upper case vowel  A        True
       5  Check for a vowel             o        True
========  ============================  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``int is_vowel(char *string)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  =========================  =========
  Number  Type    Name    Explanation                Remarks
========  ======  ======  =========================  =========
       1  char *  string  String to be worked upon.
========  ======  ======  =========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =========================================================================================  =========
  Number  Type    Name    Explanation                                                                                Remarks
========  ======  ======  =========================================================================================  =========
       1  int     NA      0 if the string if of single character and that character is a vowel else return non-zero
========  ======  ======  =========================================================================================  =========


--------------------------------------
asg_a2208 : String - Reverse a string.
--------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``myreverse()`` which will reverse a string passed to it.


'''''
Notes
'''''


^^^^^^
Note 1
^^^^^^

Do not use the ``strlen()`` function.


'''''''
Samples
'''''''
========  ================================================  =============  =============
  Number  Explanation                                       Input          Output
========  ================================================  =============  =============
       1  Reverse a string with odd number of characters.   radar          radar
       2  Reverse a string with even number of characters.  hello, world!  !dlrow ,olleh
       3  Reverse a blank string.
========  ================================================  =============  =============


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``char * myreverse(char *string)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ======================  =========
  Number  Type    Name    Explanation             Remarks
========  ======  ======  ======================  =========
       1  char *  string  String to be reversed.
========  ======  ======  ======================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =================================================================  =========
  Number  Type    Name    Explanation                                                        Remarks
========  ======  ======  =================================================================  =========
       1  char *  NA      Return the address of the passed string with reversed characters.
========  ======  ======  =================================================================  =========


---------------------------------------------------
asg_a2209 : String - Check a string for palindrome.
---------------------------------------------------


'''''''''''
Description
'''''''''''

Define a function ``is_palindrome()`` that recognizes palindromes (i.e.  words that look the same written backwards). For example, ``is_palindrome("radar")`` should return ``Success``. In case of blank strings it should return ``Success``


'''''
Notes
'''''


^^^^^^
Note 1
^^^^^^

Do not use inbuilt functions for string reversal and comparisons.


'''''''
Samples
'''''''
========  ==========================================  ===========  ========
  Number  Explanation                                 Input        Output
========  ==========================================  ===========  ========
       1  Check for a palindrome string odd numbered  "radar"      True
       2  Check for a non-palindrome string.          Hello World  False
       3  Check for a blank string.                                False
       4  Check for a even length string.             HEYYEH       True
========  ==========================================  ===========  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``int is_palindrome(char *string)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  =======================================  =========
  Number  Type    Name    Explanation                              Remarks
========  ======  ======  =======================================  =========
       1  char *  string  The string to be tested for palindrome.
========  ======  ======  =======================================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =================================================  =========
  Number  Type    Name    Explanation                                        Remarks
========  ======  ======  =================================================  =========
       1  int     NA      Zero if the string is a palindrome, 1 other wise.
========  ======  ======  =================================================  =========


--------------------------------------------------
asg_a2210 : String - Check for value in given list
--------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``is_member()`` that takes a value (i.e. a number, string, etc) x and a list of values a, and returns True if x is a member of a, False otherwise. (Note that this is exactly what the in operator does, but for the sake of the exercise you should pretend Python did not have this operator.) 


'''''''
Samples
'''''''
========  ============================  =================  ========
  Number  Explanation                   Input              Output
========  ============================  =================  ========
       1  Check if function is correst  [2, [1, 2, 3, 4]]  True
========  ============================  =================  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``boolean is_member([ANY] value, [list of ANY] mylist)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ===========  ======  ===========================================================  =========
  Number  Type         Name    Explanation                                                  Remarks
========  ===========  ======  ===========================================================  =========
       1  list of ANY  mylist  List of elements. The list can have data of multiple types.
========  ===========  ======  ===========================================================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  =======  ======  ==============================================  =========
  Number  Type     Name    Explanation                                     Remarks
========  =======  ======  ==============================================  =========
       1  boolean  NA      ``True`` or ``False`` depending on the result.
========  =======  ======  ==============================================  =========


-------------------------------------------------
asg_a2212 : String - Generate n times a character
-------------------------------------------------


'''''''''''
Description
'''''''''''

Define a function ``generate_n_chars()`` that takes an integer n and a character c and returns a string, n characters long, consisting only of c:s. For example, generate_n_chars(5, "x") should return the string "xxxxx".


'''''''
Samples
'''''''
========  =========================  ========  ========
  Number  Explanation                Input     Output
========  =========================  ========  ========
       1  Check for a general case.  [5, 'a']  aaaaa
========  =========================  ========  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``int mymax(int n, char c, char *string)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  =============================================  =========
  Number  Type    Name    Explanation                                    Remarks
========  ======  ======  =============================================  =========
       1  int     n       Number of times character should be repeated.
       2  char    c       The character to be repeated.
========  ======  ======  =============================================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  ===========================  =========
  Number  Type    Name    Explanation                  Remarks
========  ======  ======  ===========================  =========
       1  int     NA      Was the function successful
========  ======  ======  ===========================  =========


---------------------------------------------
asg_a2218 : String - Check palindrome phrases
---------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``check_phrase_palindrome()`` of a palindrome recognizer that also accepts phrase palindromes such as "Go hang a salami Im a lasagna hog.", "Was it a rat I saw?", "Step on no pets", "Sit on a potato pan, Otis", "Lisa Bonet ate no basil", "Satan, oscillate my metallic sonatas", "I roamed under it as a tired nude Maori", "Rise to vote sir", or the exclamation "Dammit, Im mad!". Note that punctuation, capitalization, and spacing are being ignored. 


'''''''
Samples
'''''''
========  =============  ================  ========
  Number  Explanation    Input             Output
========  =============  ================  ========
       1                 Rise to vote Sir  True
========  =============  ================  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


----------------------------------
asg_a2219 : String - Check pangram
----------------------------------


'''''''''''
Description
'''''''''''

Write a function ``check_pangram()``. A pangram is a sentence that contains all the letters of the English alphabet at least once, for exmaple: The quick brown fox jumps over the lazy dog. Your task here is to write a function to check a sentence for pangram or not.


'''''''
Samples
'''''''
========  =============  ==============================================  ========
  Number  Explanation    Input                                           Output
========  =============  ==============================================  ========
       1                 The quick brown fox jumps over the 14 lazy dog  True
========  =============  ==============================================  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


------------------------------------------
asg_a2223 : String DISPUTE - Caesar Cipher
------------------------------------------


'''''''''''
Description
'''''''''''

In cryptography, a Caesar cipher is a very simple encryption techniques in which each letter in the plain text is replaced by a letter some fixed number of positions down the alphabet.
For example, with a shift of 3, A would be replaced by D, B would become E, and so on. The method is named after Julius Caesar, who used it to communicate with his generals.
ROT-13 ("rotate by 13 places") is a widely used example of a Caesar cipher where the shift is 13.
Write a function ``myceaser_encode()`` which takes a string and the number of shift and encode the string.
Note that the special characters SHOULD not be shifted.
In another assignment Write another function ``myceaser_decode()`` which takes an encrypted message and the shift number and decrypts the string.


'''''''
Samples
'''''''
========  ===========================  =======  ========
  Number  Explanation                  Input    Output
========  ===========================  =======  ========
       1  Check if function is proper  Tnevzn   Garima
========  ===========================  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``char * myceaser_encode(char * string, int shift)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ==============================================================  =========
  Number  Type    Name    Explanation                                                     Remarks
========  ======  ======  ==============================================================  =========
       1  str     string  The string to be encrypted.
       2  int     shift   The number of characters to be shifted to encrypt the message.
========  ======  ======  ==============================================================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =====================  =========
  Number  Type    Name    Explanation            Remarks
========  ======  ======  =====================  =========
       1  str     NA      The encrypted string.
========  ======  ======  =====================  =========


-----------------------------------------------------------------
asg_a2236 : String - Print the frequency of characters in a file.
-----------------------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``char_freq_table()`` that takes a file name and returns a list of characters the file has along with the count.


'''''''
Samples
'''''''
========  ===========================  ==========================================================================================  ==========================================
  Number  Explanation                  Input                                                                                       Output
========  ===========================  ==========================================================================================  ==========================================
       1  Check if function is proper  /home/garima/pinnacle/leaders-pinnacle/tool/data/assignments/data_files/asg_a2236_freq.txt  [{'L': 2, '!': 1, 'H': 1, 'O': 1, 'E': 1}]
========  ===========================  ==========================================================================================  ==========================================


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``char * toggle_case(str string)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================================  =========
  Number  Type    Name    Explanation                               Remarks
========  ======  ======  ========================================  =========
       1  char *  string  The string whose case has to be toggled.
========  ======  ======  ========================================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =================================  =========
  Number  Type    Name    Explanation                        Remarks
========  ======  ======  =================================  =========
       1  char *  NA      The string with the case toggled.
========  ======  ======  =================================  =========


----------------------------------------------------
asg_a2238 : String - Find words with occurences as 1
----------------------------------------------------


'''''''''''
Description
'''''''''''

Write a function ``extract_single_occurences`` that given the file name of a text will return all the words which occur only one time. Make sure your program ignores capitalization. 


'''''''
Samples
'''''''
========  ===========================  ===========================================================================================  ========================
  Number  Explanation                  Input                                                                                        Output
========  ===========================  ===========================================================================================  ========================
       1  Check if function is proper  /home/garima/pinnacle/leaders-pinnacle/tool/data/assignments/data_files/asg_a2238_hapax.txt  ['is', 'matter', 'hell']
========  ===========================  ===========================================================================================  ========================


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``int mymax(int num1, int num2)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ==================  =========
  Number  Type    Name    Explanation         Remarks
========  ======  ======  ==================  =========
       1  int     num1    The first number.
       2  int     num2    The second number.
========  ======  ======  ==================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  ==================  =========
  Number  Type    Name    Explanation         Remarks
========  ======  ======  ==================  =========
       1  int     NA      The larger number.
========  ======  ======  ==================  =========


---------------------------------
asg_a2242 : Trivia - Anagram game
---------------------------------


'''''''''''
Description
'''''''''''




'''''''
Samples
'''''''
========  =============  =======  ========
  Number  Explanation    Input    Output
========  =============  =======  ========
       1                          #
========  =============  =======  ========


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``void alter_case_1(char *str)``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ======  ======  ========================  =========
  Number  Type    Name    Explanation               Remarks
========  ======  ======  ========================  =========
       1  char *  str     String to be worked upon
========  ======  ======  ========================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  ======  ======  =======================  =========
  Number  Type    Name    Explanation              Remarks
========  ======  ======  =======================  =========
       1  void    NA      Nothing to be returned.
========  ======  ======  =======================  =========


---------------------------------------------------
asg_a2254 : String - Change the case of a sentance.
---------------------------------------------------


'''''''''''
Description
'''''''''''


Write a function ``alter_case_1("Hello World")`` which converts the case of the characters. The
first character should be capital. Special charecters are skipped and the next alphabet should
be changed according to the previous character.'



'''''''
Samples
'''''''
========  ========================================================  ==================  ==================
  Number  Explanation                                               Input               Output
========  ========================================================  ==================  ==================
       1  See if the function works correctly.                      HelloWorld          HeLlOwOrLd
       2  See if it works correctly on all "lowercase" characters.  helloworld          HeLlOwOrLd
       3  See if it works correctly on all "UPPERCASE" characters.  HELLOWORLD          HeLlOwOrLd
       4  See if it works correctly on special characters.          Hello!Wo#rl%  5 4d  HeLlO!Wo#Rl%  5 4D
========  ========================================================  ==================  ==================


''''''''
Function
''''''''


^^^^^^^^^^^^^^^^^^
Function Signature
^^^^^^^^^^^^^^^^^^

``alter_case(char *input, int )``


^^^^^^^^^^^^^^^^^^
Function Arguments
^^^^^^^^^^^^^^^^^^
========  ========  ======  =======================  =========
  Number  Type      Name    Explanation              Remarks
========  ========  ======  =======================  =========
       1  C String  input   String to be worked upn
       2  C String  input   String to be worked upn
       3  C String  input   String to be worked upn
========  ========  ======  =======================  =========


^^^^^^^^^^^^
Return Value
^^^^^^^^^^^^
========  =============  ======  ==============================  =========
  Number  Type           Name    Explanation                     Remarks
========  =============  ======  ==============================  =========
       1  string object  NA      String with the case converted
========  =============  ======  ==============================  =========
